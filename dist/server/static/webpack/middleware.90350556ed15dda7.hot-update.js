"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=D%3A%5Cnext%5Ci18nextAndNextJS%5Cmiddleware.jsx&page=%2Fmiddleware&rootDir=D%3A%5Cnext%5Ci18nextAndNextJS&matchers=&preferredRegion=&middlewareConfig=e30%3D!":
/*!***************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=D%3A%5Cnext%5Ci18nextAndNextJS%5Cmiddleware.jsx&page=%2Fmiddleware&rootDir=D%3A%5Cnext%5Ci18nextAndNextJS&matchers=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \***************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_dist_esm_server_web_globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/esm/server/web/globals */ \"(middleware)/./node_modules/next/dist/esm/server/web/globals.js\");\n/* harmony import */ var next_dist_esm_server_web_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/esm/server/web/adapter */ \"(middleware)/./node_modules/next/dist/esm/server/web/adapter.js\");\n/* harmony import */ var _middleware_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./middleware.jsx */ \"(middleware)/./middleware.jsx\");\n\n        \n        \n        \n\n        const mod = { ..._middleware_jsx__WEBPACK_IMPORTED_MODULE_2__ }\n        const handler = mod.middleware || mod.default\n\n        if (typeof handler !== 'function') {\n          throw new Error('The Middleware \"pages/middleware\" must export a `middleware` or a `default` function');\n        }\n\n        /* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(opts) {\n          return (0,next_dist_esm_server_web_adapter__WEBPACK_IMPORTED_MODULE_1__.adapter)({\n            ...opts,\n            page: \"/middleware\",\n            handler,\n          })\n        }\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1taWRkbGV3YXJlLWxvYWRlci5qcz9hYnNvbHV0ZVBhZ2VQYXRoPUQlM0ElNUNuZXh0JTVDaTE4bmV4dEFuZE5leHRKUyU1Q21pZGRsZXdhcmUuanN4JnBhZ2U9JTJGbWlkZGxld2FyZSZyb290RGlyPUQlM0ElNUNuZXh0JTVDaTE4bmV4dEFuZE5leHRKUyZtYXRjaGVycz0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFDQSxRQUFpRDtBQUNqRCxRQUFrRTtBQUNsRSxRQUFnRDs7QUFFaEQsc0JBQXNCLEdBQUcsNENBQUk7QUFDN0I7O0FBRUE7QUFDQTtBQUNBOztBQUVBLFFBQVEsNkJBQWUsb0NBQVU7QUFDakMsaUJBQWlCLHlFQUFPO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/N2ViZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAgICAgaW1wb3J0ICduZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvZ2xvYmFscydcbiAgICAgICAgaW1wb3J0IHsgYWRhcHRlciB9IGZyb20gJ25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9hZGFwdGVyJ1xuICAgICAgICBpbXBvcnQgKiBhcyBfbW9kIGZyb20gXCIuL21pZGRsZXdhcmUuanN4XCJcblxuICAgICAgICBjb25zdCBtb2QgPSB7IC4uLl9tb2QgfVxuICAgICAgICBjb25zdCBoYW5kbGVyID0gbW9kLm1pZGRsZXdhcmUgfHwgbW9kLmRlZmF1bHRcblxuICAgICAgICBpZiAodHlwZW9mIGhhbmRsZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZSBNaWRkbGV3YXJlIFwicGFnZXMvbWlkZGxld2FyZVwiIG11c3QgZXhwb3J0IGEgYG1pZGRsZXdhcmVgIG9yIGEgYGRlZmF1bHRgIGZ1bmN0aW9uJyk7XG4gICAgICAgIH1cblxuICAgICAgICBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAob3B0cykge1xuICAgICAgICAgIHJldHVybiBhZGFwdGVyKHtcbiAgICAgICAgICAgIC4uLm9wdHMsXG4gICAgICAgICAgICBwYWdlOiBcIi9taWRkbGV3YXJlXCIsXG4gICAgICAgICAgICBoYW5kbGVyLFxuICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=D%3A%5Cnext%5Ci18nextAndNextJS%5Cmiddleware.jsx&page=%2Fmiddleware&rootDir=D%3A%5Cnext%5Ci18nextAndNextJS&matchers=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(middleware)/./middleware.jsx":
/*!************************!*\
  !*** ./middleware.jsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_intl_middleware__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-intl/middleware */ \"(middleware)/./node_modules/next-intl/dist/middleware.cjs.development.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_intl_middleware__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    locales: [\n        \"en\",\n        \"es\",\n        \"pt\"\n    ],\n    defaultLocale: \"en\"\n}));\nconst config = {\n    matcher: [\n        \"/((?!api|_next|.*\\\\..*).*)\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbWlkZGxld2FyZS5qc3giLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW1EO0FBRW5ELGlFQUFlQSxnRUFBZ0JBLENBQUM7SUFDNUJDLFNBQVM7UUFBQztRQUFNO1FBQU07S0FBSztJQUMzQkMsZUFBYztBQUNsQixFQUFFLEVBQUM7QUFFSSxNQUFNQyxTQUFTO0lBQ2xCQyxTQUFTO1FBQUM7S0FBNkI7QUFDM0MsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9taWRkbGV3YXJlLmpzeD9kZDBhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVNaWRkbGV3YXJlIGZyb20gJ25leHQtaW50bC9taWRkbGV3YXJlJ1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVNaWRkbGV3YXJlKHtcbiAgICBsb2NhbGVzOiBbJ2VuJywgJ2VzJywgJ3B0J10sXG4gICAgZGVmYXVsdExvY2FsZTpcImVuXCJcbn0pO1xuXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xuICAgIG1hdGNoZXI6IFsnLygoPyFhcGl8X25leHR8LipcXFxcLi4qKS4qKSddLFxufTsiXSwibmFtZXMiOlsiY3JlYXRlTWlkZGxld2FyZSIsImxvY2FsZXMiLCJkZWZhdWx0TG9jYWxlIiwiY29uZmlnIiwibWF0Y2hlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./middleware.jsx\n");

/***/ }),

/***/ "(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/BestAvailableLocale.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@formatjs/intl-localematcher/lib/abstract/BestAvailableLocale.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BestAvailableLocale: () => (/* binding */ BestAvailableLocale)\n/* harmony export */ });\n/**\n * https://tc39.es/ecma402/#sec-bestavailablelocale\n * @param availableLocales\n * @param locale\n */ function BestAvailableLocale(availableLocales, locale) {\n    var candidate = locale;\n    while(true){\n        if (availableLocales.has(candidate)) {\n            return candidate;\n        }\n        var pos = candidate.lastIndexOf(\"-\");\n        if (!~pos) {\n            return undefined;\n        }\n        if (pos >= 2 && candidate[pos - 2] === \"-\") {\n            pos -= 2;\n        }\n        candidate = candidate.slice(0, pos);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0Bmb3JtYXRqcy9pbnRsLWxvY2FsZW1hdGNoZXIvbGliL2Fic3RyYWN0L0Jlc3RBdmFpbGFibGVMb2NhbGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7O0NBSUMsR0FDTSxTQUFTQSxvQkFBb0JDLGdCQUFnQixFQUFFQyxNQUFNO0lBQ3hELElBQUlDLFlBQVlEO0lBQ2hCLE1BQU8sS0FBTTtRQUNULElBQUlELGlCQUFpQkcsR0FBRyxDQUFDRCxZQUFZO1lBQ2pDLE9BQU9BO1FBQ1g7UUFDQSxJQUFJRSxNQUFNRixVQUFVRyxXQUFXLENBQUM7UUFDaEMsSUFBSSxDQUFDLENBQUNELEtBQUs7WUFDUCxPQUFPRTtRQUNYO1FBQ0EsSUFBSUYsT0FBTyxLQUFLRixTQUFTLENBQUNFLE1BQU0sRUFBRSxLQUFLLEtBQUs7WUFDeENBLE9BQU87UUFDWDtRQUNBRixZQUFZQSxVQUFVSyxLQUFLLENBQUMsR0FBR0g7SUFDbkM7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGZvcm1hdGpzL2ludGwtbG9jYWxlbWF0Y2hlci9saWIvYWJzdHJhY3QvQmVzdEF2YWlsYWJsZUxvY2FsZS5qcz9hMmQyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogaHR0cHM6Ly90YzM5LmVzL2VjbWE0MDIvI3NlYy1iZXN0YXZhaWxhYmxlbG9jYWxlXG4gKiBAcGFyYW0gYXZhaWxhYmxlTG9jYWxlc1xuICogQHBhcmFtIGxvY2FsZVxuICovXG5leHBvcnQgZnVuY3Rpb24gQmVzdEF2YWlsYWJsZUxvY2FsZShhdmFpbGFibGVMb2NhbGVzLCBsb2NhbGUpIHtcbiAgICB2YXIgY2FuZGlkYXRlID0gbG9jYWxlO1xuICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIGlmIChhdmFpbGFibGVMb2NhbGVzLmhhcyhjYW5kaWRhdGUpKSB7XG4gICAgICAgICAgICByZXR1cm4gY2FuZGlkYXRlO1xuICAgICAgICB9XG4gICAgICAgIHZhciBwb3MgPSBjYW5kaWRhdGUubGFzdEluZGV4T2YoJy0nKTtcbiAgICAgICAgaWYgKCF+cG9zKSB7XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwb3MgPj0gMiAmJiBjYW5kaWRhdGVbcG9zIC0gMl0gPT09ICctJykge1xuICAgICAgICAgICAgcG9zIC09IDI7XG4gICAgICAgIH1cbiAgICAgICAgY2FuZGlkYXRlID0gY2FuZGlkYXRlLnNsaWNlKDAsIHBvcyk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbIkJlc3RBdmFpbGFibGVMb2NhbGUiLCJhdmFpbGFibGVMb2NhbGVzIiwibG9jYWxlIiwiY2FuZGlkYXRlIiwiaGFzIiwicG9zIiwibGFzdEluZGV4T2YiLCJ1bmRlZmluZWQiLCJzbGljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/BestAvailableLocale.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/BestFitMatcher.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@formatjs/intl-localematcher/lib/abstract/BestFitMatcher.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BestFitMatcher: () => (/* binding */ BestFitMatcher)\n/* harmony export */ });\n/* harmony import */ var _BestAvailableLocale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BestAvailableLocale */ \"(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/BestAvailableLocale.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/utils.js\");\n\n\n/**\n * https://tc39.es/ecma402/#sec-bestfitmatcher\n * @param availableLocales\n * @param requestedLocales\n * @param getDefaultLocale\n */ function BestFitMatcher(availableLocales, requestedLocales, getDefaultLocale) {\n    var minimizedAvailableLocaleMap = {};\n    var availableLocaleMap = {};\n    var canonicalizedLocaleMap = {};\n    var minimizedAvailableLocales = new Set();\n    availableLocales.forEach(function(locale) {\n        var minimizedLocale = new Intl.Locale(locale).minimize().toString();\n        var canonicalizedLocale = Intl.getCanonicalLocales(locale)[0] || locale;\n        minimizedAvailableLocaleMap[minimizedLocale] = locale;\n        availableLocaleMap[locale] = locale;\n        canonicalizedLocaleMap[canonicalizedLocale] = locale;\n        minimizedAvailableLocales.add(minimizedLocale);\n        minimizedAvailableLocales.add(locale);\n        minimizedAvailableLocales.add(canonicalizedLocale);\n    });\n    var foundLocale;\n    for(var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++){\n        var l = requestedLocales_1[_i];\n        if (foundLocale) {\n            break;\n        }\n        var noExtensionLocale = l.replace(_utils__WEBPACK_IMPORTED_MODULE_1__.UNICODE_EXTENSION_SEQUENCE_REGEX, \"\");\n        if (availableLocales.has(noExtensionLocale)) {\n            foundLocale = noExtensionLocale;\n            break;\n        }\n        if (minimizedAvailableLocales.has(noExtensionLocale)) {\n            foundLocale = noExtensionLocale;\n            break;\n        }\n        var locale = new Intl.Locale(noExtensionLocale);\n        var maximizedRequestedLocale = locale.maximize().toString();\n        var minimizedRequestedLocale = locale.minimize().toString();\n        // Check minimized locale\n        if (minimizedAvailableLocales.has(minimizedRequestedLocale)) {\n            foundLocale = minimizedRequestedLocale;\n            break;\n        }\n        // Lookup algo on maximized locale\n        foundLocale = (0,_BestAvailableLocale__WEBPACK_IMPORTED_MODULE_0__.BestAvailableLocale)(minimizedAvailableLocales, maximizedRequestedLocale);\n    }\n    if (!foundLocale) {\n        return {\n            locale: getDefaultLocale()\n        };\n    }\n    return {\n        locale: availableLocaleMap[foundLocale] || canonicalizedLocaleMap[foundLocale] || minimizedAvailableLocaleMap[foundLocale] || foundLocale\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0Bmb3JtYXRqcy9pbnRsLWxvY2FsZW1hdGNoZXIvbGliL2Fic3RyYWN0L0Jlc3RGaXRNYXRjaGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE0RDtBQUNEO0FBQzNEOzs7OztDQUtDLEdBQ00sU0FBU0UsZUFBZUMsZ0JBQWdCLEVBQUVDLGdCQUFnQixFQUFFQyxnQkFBZ0I7SUFDL0UsSUFBSUMsOEJBQThCLENBQUM7SUFDbkMsSUFBSUMscUJBQXFCLENBQUM7SUFDMUIsSUFBSUMseUJBQXlCLENBQUM7SUFDOUIsSUFBSUMsNEJBQTRCLElBQUlDO0lBQ3BDUCxpQkFBaUJRLE9BQU8sQ0FBQyxTQUFVQyxNQUFNO1FBQ3JDLElBQUlDLGtCQUFrQixJQUFJQyxLQUFLQyxNQUFNLENBQUNILFFBQ2pDSSxRQUFRLEdBQ1JDLFFBQVE7UUFDYixJQUFJQyxzQkFBc0JKLEtBQUtLLG1CQUFtQixDQUFDUCxPQUFPLENBQUMsRUFBRSxJQUFJQTtRQUNqRU4sMkJBQTJCLENBQUNPLGdCQUFnQixHQUFHRDtRQUMvQ0wsa0JBQWtCLENBQUNLLE9BQU8sR0FBR0E7UUFDN0JKLHNCQUFzQixDQUFDVSxvQkFBb0IsR0FBR047UUFDOUNILDBCQUEwQlcsR0FBRyxDQUFDUDtRQUM5QkosMEJBQTBCVyxHQUFHLENBQUNSO1FBQzlCSCwwQkFBMEJXLEdBQUcsQ0FBQ0Y7SUFDbEM7SUFDQSxJQUFJRztJQUNKLElBQUssSUFBSUMsS0FBSyxHQUFHQyxxQkFBcUJuQixrQkFBa0JrQixLQUFLQyxtQkFBbUJDLE1BQU0sRUFBRUYsS0FBTTtRQUMxRixJQUFJRyxJQUFJRixrQkFBa0IsQ0FBQ0QsR0FBRztRQUM5QixJQUFJRCxhQUFhO1lBQ2I7UUFDSjtRQUNBLElBQUlLLG9CQUFvQkQsRUFBRUUsT0FBTyxDQUFDMUIsb0VBQWdDQSxFQUFFO1FBQ3BFLElBQUlFLGlCQUFpQnlCLEdBQUcsQ0FBQ0Ysb0JBQW9CO1lBQ3pDTCxjQUFjSztZQUNkO1FBQ0o7UUFDQSxJQUFJakIsMEJBQTBCbUIsR0FBRyxDQUFDRixvQkFBb0I7WUFDbERMLGNBQWNLO1lBQ2Q7UUFDSjtRQUNBLElBQUlkLFNBQVMsSUFBSUUsS0FBS0MsTUFBTSxDQUFDVztRQUM3QixJQUFJRywyQkFBMkJqQixPQUFPa0IsUUFBUSxHQUFHYixRQUFRO1FBQ3pELElBQUljLDJCQUEyQm5CLE9BQU9JLFFBQVEsR0FBR0MsUUFBUTtRQUN6RCx5QkFBeUI7UUFDekIsSUFBSVIsMEJBQTBCbUIsR0FBRyxDQUFDRywyQkFBMkI7WUFDekRWLGNBQWNVO1lBQ2Q7UUFDSjtRQUNBLGtDQUFrQztRQUNsQ1YsY0FBY3JCLHlFQUFtQkEsQ0FBQ1MsMkJBQTJCb0I7SUFDakU7SUFDQSxJQUFJLENBQUNSLGFBQWE7UUFDZCxPQUFPO1lBQUVULFFBQVFQO1FBQW1CO0lBQ3hDO0lBQ0EsT0FBTztRQUNITyxRQUFRTCxrQkFBa0IsQ0FBQ2MsWUFBWSxJQUNuQ2Isc0JBQXNCLENBQUNhLFlBQVksSUFDbkNmLDJCQUEyQixDQUFDZSxZQUFZLElBQ3hDQTtJQUNSO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bmb3JtYXRqcy9pbnRsLWxvY2FsZW1hdGNoZXIvbGliL2Fic3RyYWN0L0Jlc3RGaXRNYXRjaGVyLmpzP2FjOGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmVzdEF2YWlsYWJsZUxvY2FsZSB9IGZyb20gJy4vQmVzdEF2YWlsYWJsZUxvY2FsZSc7XG5pbXBvcnQgeyBVTklDT0RFX0VYVEVOU0lPTl9TRVFVRU5DRV9SRUdFWCB9IGZyb20gJy4vdXRpbHMnO1xuLyoqXG4gKiBodHRwczovL3RjMzkuZXMvZWNtYTQwMi8jc2VjLWJlc3RmaXRtYXRjaGVyXG4gKiBAcGFyYW0gYXZhaWxhYmxlTG9jYWxlc1xuICogQHBhcmFtIHJlcXVlc3RlZExvY2FsZXNcbiAqIEBwYXJhbSBnZXREZWZhdWx0TG9jYWxlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBCZXN0Rml0TWF0Y2hlcihhdmFpbGFibGVMb2NhbGVzLCByZXF1ZXN0ZWRMb2NhbGVzLCBnZXREZWZhdWx0TG9jYWxlKSB7XG4gICAgdmFyIG1pbmltaXplZEF2YWlsYWJsZUxvY2FsZU1hcCA9IHt9O1xuICAgIHZhciBhdmFpbGFibGVMb2NhbGVNYXAgPSB7fTtcbiAgICB2YXIgY2Fub25pY2FsaXplZExvY2FsZU1hcCA9IHt9O1xuICAgIHZhciBtaW5pbWl6ZWRBdmFpbGFibGVMb2NhbGVzID0gbmV3IFNldCgpO1xuICAgIGF2YWlsYWJsZUxvY2FsZXMuZm9yRWFjaChmdW5jdGlvbiAobG9jYWxlKSB7XG4gICAgICAgIHZhciBtaW5pbWl6ZWRMb2NhbGUgPSBuZXcgSW50bC5Mb2NhbGUobG9jYWxlKVxuICAgICAgICAgICAgLm1pbmltaXplKClcbiAgICAgICAgICAgIC50b1N0cmluZygpO1xuICAgICAgICB2YXIgY2Fub25pY2FsaXplZExvY2FsZSA9IEludGwuZ2V0Q2Fub25pY2FsTG9jYWxlcyhsb2NhbGUpWzBdIHx8IGxvY2FsZTtcbiAgICAgICAgbWluaW1pemVkQXZhaWxhYmxlTG9jYWxlTWFwW21pbmltaXplZExvY2FsZV0gPSBsb2NhbGU7XG4gICAgICAgIGF2YWlsYWJsZUxvY2FsZU1hcFtsb2NhbGVdID0gbG9jYWxlO1xuICAgICAgICBjYW5vbmljYWxpemVkTG9jYWxlTWFwW2Nhbm9uaWNhbGl6ZWRMb2NhbGVdID0gbG9jYWxlO1xuICAgICAgICBtaW5pbWl6ZWRBdmFpbGFibGVMb2NhbGVzLmFkZChtaW5pbWl6ZWRMb2NhbGUpO1xuICAgICAgICBtaW5pbWl6ZWRBdmFpbGFibGVMb2NhbGVzLmFkZChsb2NhbGUpO1xuICAgICAgICBtaW5pbWl6ZWRBdmFpbGFibGVMb2NhbGVzLmFkZChjYW5vbmljYWxpemVkTG9jYWxlKTtcbiAgICB9KTtcbiAgICB2YXIgZm91bmRMb2NhbGU7XG4gICAgZm9yICh2YXIgX2kgPSAwLCByZXF1ZXN0ZWRMb2NhbGVzXzEgPSByZXF1ZXN0ZWRMb2NhbGVzOyBfaSA8IHJlcXVlc3RlZExvY2FsZXNfMS5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgdmFyIGwgPSByZXF1ZXN0ZWRMb2NhbGVzXzFbX2ldO1xuICAgICAgICBpZiAoZm91bmRMb2NhbGUpIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIHZhciBub0V4dGVuc2lvbkxvY2FsZSA9IGwucmVwbGFjZShVTklDT0RFX0VYVEVOU0lPTl9TRVFVRU5DRV9SRUdFWCwgJycpO1xuICAgICAgICBpZiAoYXZhaWxhYmxlTG9jYWxlcy5oYXMobm9FeHRlbnNpb25Mb2NhbGUpKSB7XG4gICAgICAgICAgICBmb3VuZExvY2FsZSA9IG5vRXh0ZW5zaW9uTG9jYWxlO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG1pbmltaXplZEF2YWlsYWJsZUxvY2FsZXMuaGFzKG5vRXh0ZW5zaW9uTG9jYWxlKSkge1xuICAgICAgICAgICAgZm91bmRMb2NhbGUgPSBub0V4dGVuc2lvbkxvY2FsZTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIHZhciBsb2NhbGUgPSBuZXcgSW50bC5Mb2NhbGUobm9FeHRlbnNpb25Mb2NhbGUpO1xuICAgICAgICB2YXIgbWF4aW1pemVkUmVxdWVzdGVkTG9jYWxlID0gbG9jYWxlLm1heGltaXplKCkudG9TdHJpbmcoKTtcbiAgICAgICAgdmFyIG1pbmltaXplZFJlcXVlc3RlZExvY2FsZSA9IGxvY2FsZS5taW5pbWl6ZSgpLnRvU3RyaW5nKCk7XG4gICAgICAgIC8vIENoZWNrIG1pbmltaXplZCBsb2NhbGVcbiAgICAgICAgaWYgKG1pbmltaXplZEF2YWlsYWJsZUxvY2FsZXMuaGFzKG1pbmltaXplZFJlcXVlc3RlZExvY2FsZSkpIHtcbiAgICAgICAgICAgIGZvdW5kTG9jYWxlID0gbWluaW1pemVkUmVxdWVzdGVkTG9jYWxlO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgLy8gTG9va3VwIGFsZ28gb24gbWF4aW1pemVkIGxvY2FsZVxuICAgICAgICBmb3VuZExvY2FsZSA9IEJlc3RBdmFpbGFibGVMb2NhbGUobWluaW1pemVkQXZhaWxhYmxlTG9jYWxlcywgbWF4aW1pemVkUmVxdWVzdGVkTG9jYWxlKTtcbiAgICB9XG4gICAgaWYgKCFmb3VuZExvY2FsZSkge1xuICAgICAgICByZXR1cm4geyBsb2NhbGU6IGdldERlZmF1bHRMb2NhbGUoKSB9O1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBsb2NhbGU6IGF2YWlsYWJsZUxvY2FsZU1hcFtmb3VuZExvY2FsZV0gfHxcbiAgICAgICAgICAgIGNhbm9uaWNhbGl6ZWRMb2NhbGVNYXBbZm91bmRMb2NhbGVdIHx8XG4gICAgICAgICAgICBtaW5pbWl6ZWRBdmFpbGFibGVMb2NhbGVNYXBbZm91bmRMb2NhbGVdIHx8XG4gICAgICAgICAgICBmb3VuZExvY2FsZSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbIkJlc3RBdmFpbGFibGVMb2NhbGUiLCJVTklDT0RFX0VYVEVOU0lPTl9TRVFVRU5DRV9SRUdFWCIsIkJlc3RGaXRNYXRjaGVyIiwiYXZhaWxhYmxlTG9jYWxlcyIsInJlcXVlc3RlZExvY2FsZXMiLCJnZXREZWZhdWx0TG9jYWxlIiwibWluaW1pemVkQXZhaWxhYmxlTG9jYWxlTWFwIiwiYXZhaWxhYmxlTG9jYWxlTWFwIiwiY2Fub25pY2FsaXplZExvY2FsZU1hcCIsIm1pbmltaXplZEF2YWlsYWJsZUxvY2FsZXMiLCJTZXQiLCJmb3JFYWNoIiwibG9jYWxlIiwibWluaW1pemVkTG9jYWxlIiwiSW50bCIsIkxvY2FsZSIsIm1pbmltaXplIiwidG9TdHJpbmciLCJjYW5vbmljYWxpemVkTG9jYWxlIiwiZ2V0Q2Fub25pY2FsTG9jYWxlcyIsImFkZCIsImZvdW5kTG9jYWxlIiwiX2kiLCJyZXF1ZXN0ZWRMb2NhbGVzXzEiLCJsZW5ndGgiLCJsIiwibm9FeHRlbnNpb25Mb2NhbGUiLCJyZXBsYWNlIiwiaGFzIiwibWF4aW1pemVkUmVxdWVzdGVkTG9jYWxlIiwibWF4aW1pemUiLCJtaW5pbWl6ZWRSZXF1ZXN0ZWRMb2NhbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/BestFitMatcher.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/CanonicalizeLocaleList.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@formatjs/intl-localematcher/lib/abstract/CanonicalizeLocaleList.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CanonicalizeLocaleList: () => (/* binding */ CanonicalizeLocaleList)\n/* harmony export */ });\n/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-canonicalizelocalelist\n * @param locales\n */ function CanonicalizeLocaleList(locales) {\n    // TODO\n    return Intl.getCanonicalLocales(locales);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0Bmb3JtYXRqcy9pbnRsLWxvY2FsZW1hdGNoZXIvbGliL2Fic3RyYWN0L0Nhbm9uaWNhbGl6ZUxvY2FsZUxpc3QuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Q0FHQyxHQUNNLFNBQVNBLHVCQUF1QkMsT0FBTztJQUMxQyxPQUFPO0lBQ1AsT0FBT0MsS0FBS0MsbUJBQW1CLENBQUNGO0FBQ3BDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AZm9ybWF0anMvaW50bC1sb2NhbGVtYXRjaGVyL2xpYi9hYnN0cmFjdC9DYW5vbmljYWxpemVMb2NhbGVMaXN0LmpzPzc2ZjQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTQwMi83LjAvaW5kZXguaHRtbCNzZWMtY2Fub25pY2FsaXplbG9jYWxlbGlzdFxuICogQHBhcmFtIGxvY2FsZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIENhbm9uaWNhbGl6ZUxvY2FsZUxpc3QobG9jYWxlcykge1xuICAgIC8vIFRPRE9cbiAgICByZXR1cm4gSW50bC5nZXRDYW5vbmljYWxMb2NhbGVzKGxvY2FsZXMpO1xufVxuIl0sIm5hbWVzIjpbIkNhbm9uaWNhbGl6ZUxvY2FsZUxpc3QiLCJsb2NhbGVzIiwiSW50bCIsImdldENhbm9uaWNhbExvY2FsZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/CanonicalizeLocaleList.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/LookupMatcher.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@formatjs/intl-localematcher/lib/abstract/LookupMatcher.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LookupMatcher: () => (/* binding */ LookupMatcher)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/utils.js\");\n/* harmony import */ var _BestAvailableLocale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BestAvailableLocale */ \"(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/BestAvailableLocale.js\");\n\n\n/**\n * https://tc39.es/ecma402/#sec-lookupmatcher\n * @param availableLocales\n * @param requestedLocales\n * @param getDefaultLocale\n */ function LookupMatcher(availableLocales, requestedLocales, getDefaultLocale) {\n    var result = {\n        locale: \"\"\n    };\n    for(var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++){\n        var locale = requestedLocales_1[_i];\n        var noExtensionLocale = locale.replace(_utils__WEBPACK_IMPORTED_MODULE_0__.UNICODE_EXTENSION_SEQUENCE_REGEX, \"\");\n        var availableLocale = (0,_BestAvailableLocale__WEBPACK_IMPORTED_MODULE_1__.BestAvailableLocale)(availableLocales, noExtensionLocale);\n        if (availableLocale) {\n            result.locale = availableLocale;\n            if (locale !== noExtensionLocale) {\n                result.extension = locale.slice(noExtensionLocale.length + 1, locale.length);\n            }\n            return result;\n        }\n    }\n    result.locale = getDefaultLocale();\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0Bmb3JtYXRqcy9pbnRsLWxvY2FsZW1hdGNoZXIvbGliL2Fic3RyYWN0L0xvb2t1cE1hdGNoZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJEO0FBQ0M7QUFDNUQ7Ozs7O0NBS0MsR0FDTSxTQUFTRSxjQUFjQyxnQkFBZ0IsRUFBRUMsZ0JBQWdCLEVBQUVDLGdCQUFnQjtJQUM5RSxJQUFJQyxTQUFTO1FBQUVDLFFBQVE7SUFBRztJQUMxQixJQUFLLElBQUlDLEtBQUssR0FBR0MscUJBQXFCTCxrQkFBa0JJLEtBQUtDLG1CQUFtQkMsTUFBTSxFQUFFRixLQUFNO1FBQzFGLElBQUlELFNBQVNFLGtCQUFrQixDQUFDRCxHQUFHO1FBQ25DLElBQUlHLG9CQUFvQkosT0FBT0ssT0FBTyxDQUFDWixvRUFBZ0NBLEVBQUU7UUFDekUsSUFBSWEsa0JBQWtCWix5RUFBbUJBLENBQUNFLGtCQUFrQlE7UUFDNUQsSUFBSUUsaUJBQWlCO1lBQ2pCUCxPQUFPQyxNQUFNLEdBQUdNO1lBQ2hCLElBQUlOLFdBQVdJLG1CQUFtQjtnQkFDOUJMLE9BQU9RLFNBQVMsR0FBR1AsT0FBT1EsS0FBSyxDQUFDSixrQkFBa0JELE1BQU0sR0FBRyxHQUFHSCxPQUFPRyxNQUFNO1lBQy9FO1lBQ0EsT0FBT0o7UUFDWDtJQUNKO0lBQ0FBLE9BQU9DLE1BQU0sR0FBR0Y7SUFDaEIsT0FBT0M7QUFDWCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGZvcm1hdGpzL2ludGwtbG9jYWxlbWF0Y2hlci9saWIvYWJzdHJhY3QvTG9va3VwTWF0Y2hlci5qcz8xNGRjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFVOSUNPREVfRVhURU5TSU9OX1NFUVVFTkNFX1JFR0VYIH0gZnJvbSAnLi91dGlscyc7XG5pbXBvcnQgeyBCZXN0QXZhaWxhYmxlTG9jYWxlIH0gZnJvbSAnLi9CZXN0QXZhaWxhYmxlTG9jYWxlJztcbi8qKlxuICogaHR0cHM6Ly90YzM5LmVzL2VjbWE0MDIvI3NlYy1sb29rdXBtYXRjaGVyXG4gKiBAcGFyYW0gYXZhaWxhYmxlTG9jYWxlc1xuICogQHBhcmFtIHJlcXVlc3RlZExvY2FsZXNcbiAqIEBwYXJhbSBnZXREZWZhdWx0TG9jYWxlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBMb29rdXBNYXRjaGVyKGF2YWlsYWJsZUxvY2FsZXMsIHJlcXVlc3RlZExvY2FsZXMsIGdldERlZmF1bHRMb2NhbGUpIHtcbiAgICB2YXIgcmVzdWx0ID0geyBsb2NhbGU6ICcnIH07XG4gICAgZm9yICh2YXIgX2kgPSAwLCByZXF1ZXN0ZWRMb2NhbGVzXzEgPSByZXF1ZXN0ZWRMb2NhbGVzOyBfaSA8IHJlcXVlc3RlZExvY2FsZXNfMS5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgdmFyIGxvY2FsZSA9IHJlcXVlc3RlZExvY2FsZXNfMVtfaV07XG4gICAgICAgIHZhciBub0V4dGVuc2lvbkxvY2FsZSA9IGxvY2FsZS5yZXBsYWNlKFVOSUNPREVfRVhURU5TSU9OX1NFUVVFTkNFX1JFR0VYLCAnJyk7XG4gICAgICAgIHZhciBhdmFpbGFibGVMb2NhbGUgPSBCZXN0QXZhaWxhYmxlTG9jYWxlKGF2YWlsYWJsZUxvY2FsZXMsIG5vRXh0ZW5zaW9uTG9jYWxlKTtcbiAgICAgICAgaWYgKGF2YWlsYWJsZUxvY2FsZSkge1xuICAgICAgICAgICAgcmVzdWx0LmxvY2FsZSA9IGF2YWlsYWJsZUxvY2FsZTtcbiAgICAgICAgICAgIGlmIChsb2NhbGUgIT09IG5vRXh0ZW5zaW9uTG9jYWxlKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LmV4dGVuc2lvbiA9IGxvY2FsZS5zbGljZShub0V4dGVuc2lvbkxvY2FsZS5sZW5ndGggKyAxLCBsb2NhbGUubGVuZ3RoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVzdWx0LmxvY2FsZSA9IGdldERlZmF1bHRMb2NhbGUoKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufVxuIl0sIm5hbWVzIjpbIlVOSUNPREVfRVhURU5TSU9OX1NFUVVFTkNFX1JFR0VYIiwiQmVzdEF2YWlsYWJsZUxvY2FsZSIsIkxvb2t1cE1hdGNoZXIiLCJhdmFpbGFibGVMb2NhbGVzIiwicmVxdWVzdGVkTG9jYWxlcyIsImdldERlZmF1bHRMb2NhbGUiLCJyZXN1bHQiLCJsb2NhbGUiLCJfaSIsInJlcXVlc3RlZExvY2FsZXNfMSIsImxlbmd0aCIsIm5vRXh0ZW5zaW9uTG9jYWxlIiwicmVwbGFjZSIsImF2YWlsYWJsZUxvY2FsZSIsImV4dGVuc2lvbiIsInNsaWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/LookupMatcher.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/LookupSupportedLocales.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@formatjs/intl-localematcher/lib/abstract/LookupSupportedLocales.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LookupSupportedLocales: () => (/* binding */ LookupSupportedLocales)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/utils.js\");\n/* harmony import */ var _BestAvailableLocale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BestAvailableLocale */ \"(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/BestAvailableLocale.js\");\n\n\n/**\n * https://tc39.es/ecma402/#sec-lookupsupportedlocales\n * @param availableLocales\n * @param requestedLocales\n */ function LookupSupportedLocales(availableLocales, requestedLocales) {\n    var subset = [];\n    for(var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++){\n        var locale = requestedLocales_1[_i];\n        var noExtensionLocale = locale.replace(_utils__WEBPACK_IMPORTED_MODULE_0__.UNICODE_EXTENSION_SEQUENCE_REGEX, \"\");\n        var availableLocale = (0,_BestAvailableLocale__WEBPACK_IMPORTED_MODULE_1__.BestAvailableLocale)(availableLocales, noExtensionLocale);\n        if (availableLocale) {\n            subset.push(availableLocale);\n        }\n    }\n    return subset;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0Bmb3JtYXRqcy9pbnRsLWxvY2FsZW1hdGNoZXIvbGliL2Fic3RyYWN0L0xvb2t1cFN1cHBvcnRlZExvY2FsZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJEO0FBQ0M7QUFDNUQ7Ozs7Q0FJQyxHQUNNLFNBQVNFLHVCQUF1QkMsZ0JBQWdCLEVBQUVDLGdCQUFnQjtJQUNyRSxJQUFJQyxTQUFTLEVBQUU7SUFDZixJQUFLLElBQUlDLEtBQUssR0FBR0MscUJBQXFCSCxrQkFBa0JFLEtBQUtDLG1CQUFtQkMsTUFBTSxFQUFFRixLQUFNO1FBQzFGLElBQUlHLFNBQVNGLGtCQUFrQixDQUFDRCxHQUFHO1FBQ25DLElBQUlJLG9CQUFvQkQsT0FBT0UsT0FBTyxDQUFDWCxvRUFBZ0NBLEVBQUU7UUFDekUsSUFBSVksa0JBQWtCWCx5RUFBbUJBLENBQUNFLGtCQUFrQk87UUFDNUQsSUFBSUUsaUJBQWlCO1lBQ2pCUCxPQUFPUSxJQUFJLENBQUNEO1FBQ2hCO0lBQ0o7SUFDQSxPQUFPUDtBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AZm9ybWF0anMvaW50bC1sb2NhbGVtYXRjaGVyL2xpYi9hYnN0cmFjdC9Mb29rdXBTdXBwb3J0ZWRMb2NhbGVzLmpzPzk3OTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVU5JQ09ERV9FWFRFTlNJT05fU0VRVUVOQ0VfUkVHRVggfSBmcm9tICcuL3V0aWxzJztcbmltcG9ydCB7IEJlc3RBdmFpbGFibGVMb2NhbGUgfSBmcm9tICcuL0Jlc3RBdmFpbGFibGVMb2NhbGUnO1xuLyoqXG4gKiBodHRwczovL3RjMzkuZXMvZWNtYTQwMi8jc2VjLWxvb2t1cHN1cHBvcnRlZGxvY2FsZXNcbiAqIEBwYXJhbSBhdmFpbGFibGVMb2NhbGVzXG4gKiBAcGFyYW0gcmVxdWVzdGVkTG9jYWxlc1xuICovXG5leHBvcnQgZnVuY3Rpb24gTG9va3VwU3VwcG9ydGVkTG9jYWxlcyhhdmFpbGFibGVMb2NhbGVzLCByZXF1ZXN0ZWRMb2NhbGVzKSB7XG4gICAgdmFyIHN1YnNldCA9IFtdO1xuICAgIGZvciAodmFyIF9pID0gMCwgcmVxdWVzdGVkTG9jYWxlc18xID0gcmVxdWVzdGVkTG9jYWxlczsgX2kgPCByZXF1ZXN0ZWRMb2NhbGVzXzEubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgIHZhciBsb2NhbGUgPSByZXF1ZXN0ZWRMb2NhbGVzXzFbX2ldO1xuICAgICAgICB2YXIgbm9FeHRlbnNpb25Mb2NhbGUgPSBsb2NhbGUucmVwbGFjZShVTklDT0RFX0VYVEVOU0lPTl9TRVFVRU5DRV9SRUdFWCwgJycpO1xuICAgICAgICB2YXIgYXZhaWxhYmxlTG9jYWxlID0gQmVzdEF2YWlsYWJsZUxvY2FsZShhdmFpbGFibGVMb2NhbGVzLCBub0V4dGVuc2lvbkxvY2FsZSk7XG4gICAgICAgIGlmIChhdmFpbGFibGVMb2NhbGUpIHtcbiAgICAgICAgICAgIHN1YnNldC5wdXNoKGF2YWlsYWJsZUxvY2FsZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHN1YnNldDtcbn1cbiJdLCJuYW1lcyI6WyJVTklDT0RFX0VYVEVOU0lPTl9TRVFVRU5DRV9SRUdFWCIsIkJlc3RBdmFpbGFibGVMb2NhbGUiLCJMb29rdXBTdXBwb3J0ZWRMb2NhbGVzIiwiYXZhaWxhYmxlTG9jYWxlcyIsInJlcXVlc3RlZExvY2FsZXMiLCJzdWJzZXQiLCJfaSIsInJlcXVlc3RlZExvY2FsZXNfMSIsImxlbmd0aCIsImxvY2FsZSIsIm5vRXh0ZW5zaW9uTG9jYWxlIiwicmVwbGFjZSIsImF2YWlsYWJsZUxvY2FsZSIsInB1c2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/LookupSupportedLocales.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/ResolveLocale.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@formatjs/intl-localematcher/lib/abstract/ResolveLocale.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ResolveLocale: () => (/* binding */ ResolveLocale)\n/* harmony export */ });\n/* harmony import */ var _LookupMatcher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LookupMatcher */ \"(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/LookupMatcher.js\");\n/* harmony import */ var _BestFitMatcher__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BestFitMatcher */ \"(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/BestFitMatcher.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/utils.js\");\n/* harmony import */ var _UnicodeExtensionValue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./UnicodeExtensionValue */ \"(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/UnicodeExtensionValue.js\");\n\n\n\n\n/**\n * https://tc39.es/ecma402/#sec-resolvelocale\n */ function ResolveLocale(availableLocales, requestedLocales, options, relevantExtensionKeys, localeData, getDefaultLocale) {\n    var matcher = options.localeMatcher;\n    var r;\n    if (matcher === \"lookup\") {\n        r = (0,_LookupMatcher__WEBPACK_IMPORTED_MODULE_0__.LookupMatcher)(availableLocales, requestedLocales, getDefaultLocale);\n    } else {\n        r = (0,_BestFitMatcher__WEBPACK_IMPORTED_MODULE_1__.BestFitMatcher)(availableLocales, requestedLocales, getDefaultLocale);\n    }\n    var foundLocale = r.locale;\n    var result = {\n        locale: \"\",\n        dataLocale: foundLocale\n    };\n    var supportedExtension = \"-u\";\n    for(var _i = 0, relevantExtensionKeys_1 = relevantExtensionKeys; _i < relevantExtensionKeys_1.length; _i++){\n        var key = relevantExtensionKeys_1[_i];\n        (0,_utils__WEBPACK_IMPORTED_MODULE_2__.invariant)(foundLocale in localeData, \"Missing locale data for \".concat(foundLocale));\n        var foundLocaleData = localeData[foundLocale];\n        (0,_utils__WEBPACK_IMPORTED_MODULE_2__.invariant)(typeof foundLocaleData === \"object\" && foundLocaleData !== null, \"locale data \".concat(key, \" must be an object\"));\n        var keyLocaleData = foundLocaleData[key];\n        (0,_utils__WEBPACK_IMPORTED_MODULE_2__.invariant)(Array.isArray(keyLocaleData), \"keyLocaleData for \".concat(key, \" must be an array\"));\n        var value = keyLocaleData[0];\n        (0,_utils__WEBPACK_IMPORTED_MODULE_2__.invariant)(typeof value === \"string\" || value === null, \"value must be string or null but got \".concat(typeof value, \" in key \").concat(key));\n        var supportedExtensionAddition = \"\";\n        if (r.extension) {\n            var requestedValue = (0,_UnicodeExtensionValue__WEBPACK_IMPORTED_MODULE_3__.UnicodeExtensionValue)(r.extension, key);\n            if (requestedValue !== undefined) {\n                if (requestedValue !== \"\") {\n                    if (~keyLocaleData.indexOf(requestedValue)) {\n                        value = requestedValue;\n                        supportedExtensionAddition = \"-\".concat(key, \"-\").concat(value);\n                    }\n                } else if (~requestedValue.indexOf(\"true\")) {\n                    value = \"true\";\n                    supportedExtensionAddition = \"-\".concat(key);\n                }\n            }\n        }\n        if (key in options) {\n            var optionsValue = options[key];\n            (0,_utils__WEBPACK_IMPORTED_MODULE_2__.invariant)(typeof optionsValue === \"string\" || typeof optionsValue === \"undefined\" || optionsValue === null, \"optionsValue must be String, Undefined or Null\");\n            if (~keyLocaleData.indexOf(optionsValue)) {\n                if (optionsValue !== value) {\n                    value = optionsValue;\n                    supportedExtensionAddition = \"\";\n                }\n            }\n        }\n        result[key] = value;\n        supportedExtension += supportedExtensionAddition;\n    }\n    if (supportedExtension.length > 2) {\n        var privateIndex = foundLocale.indexOf(\"-x-\");\n        if (privateIndex === -1) {\n            foundLocale = foundLocale + supportedExtension;\n        } else {\n            var preExtension = foundLocale.slice(0, privateIndex);\n            var postExtension = foundLocale.slice(privateIndex, foundLocale.length);\n            foundLocale = preExtension + supportedExtension + postExtension;\n        }\n        foundLocale = Intl.getCanonicalLocales(foundLocale)[0];\n    }\n    result.locale = foundLocale;\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/ResolveLocale.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/UnicodeExtensionValue.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@formatjs/intl-localematcher/lib/abstract/UnicodeExtensionValue.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UnicodeExtensionValue: () => (/* binding */ UnicodeExtensionValue)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/utils.js\");\n\n/**\n * https://tc39.es/ecma402/#sec-unicodeextensionvalue\n * @param extension\n * @param key\n */ function UnicodeExtensionValue(extension, key) {\n    (0,_utils__WEBPACK_IMPORTED_MODULE_0__.invariant)(key.length === 2, \"key must have 2 elements\");\n    var size = extension.length;\n    var searchValue = \"-\".concat(key, \"-\");\n    var pos = extension.indexOf(searchValue);\n    if (pos !== -1) {\n        var start = pos + 4;\n        var end = start;\n        var k = start;\n        var done = false;\n        while(!done){\n            var e = extension.indexOf(\"-\", k);\n            var len = void 0;\n            if (e === -1) {\n                len = size - k;\n            } else {\n                len = e - k;\n            }\n            if (len === 2) {\n                done = true;\n            } else if (e === -1) {\n                end = size;\n                done = true;\n            } else {\n                end = e;\n                k = e + 1;\n            }\n        }\n        return extension.slice(start, end);\n    }\n    searchValue = \"-\".concat(key);\n    pos = extension.indexOf(searchValue);\n    if (pos !== -1 && pos + 3 === size) {\n        return \"\";\n    }\n    return undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0Bmb3JtYXRqcy9pbnRsLWxvY2FsZW1hdGNoZXIvbGliL2Fic3RyYWN0L1VuaWNvZGVFeHRlbnNpb25WYWx1ZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFvQztBQUNwQzs7OztDQUlDLEdBQ00sU0FBU0Msc0JBQXNCQyxTQUFTLEVBQUVDLEdBQUc7SUFDaERILGlEQUFTQSxDQUFDRyxJQUFJQyxNQUFNLEtBQUssR0FBRztJQUM1QixJQUFJQyxPQUFPSCxVQUFVRSxNQUFNO0lBQzNCLElBQUlFLGNBQWMsSUFBSUMsTUFBTSxDQUFDSixLQUFLO0lBQ2xDLElBQUlLLE1BQU1OLFVBQVVPLE9BQU8sQ0FBQ0g7SUFDNUIsSUFBSUUsUUFBUSxDQUFDLEdBQUc7UUFDWixJQUFJRSxRQUFRRixNQUFNO1FBQ2xCLElBQUlHLE1BQU1EO1FBQ1YsSUFBSUUsSUFBSUY7UUFDUixJQUFJRyxPQUFPO1FBQ1gsTUFBTyxDQUFDQSxLQUFNO1lBQ1YsSUFBSUMsSUFBSVosVUFBVU8sT0FBTyxDQUFDLEtBQUtHO1lBQy9CLElBQUlHLE1BQU0sS0FBSztZQUNmLElBQUlELE1BQU0sQ0FBQyxHQUFHO2dCQUNWQyxNQUFNVixPQUFPTztZQUNqQixPQUNLO2dCQUNERyxNQUFNRCxJQUFJRjtZQUNkO1lBQ0EsSUFBSUcsUUFBUSxHQUFHO2dCQUNYRixPQUFPO1lBQ1gsT0FDSyxJQUFJQyxNQUFNLENBQUMsR0FBRztnQkFDZkgsTUFBTU47Z0JBQ05RLE9BQU87WUFDWCxPQUNLO2dCQUNERixNQUFNRztnQkFDTkYsSUFBSUUsSUFBSTtZQUNaO1FBQ0o7UUFDQSxPQUFPWixVQUFVYyxLQUFLLENBQUNOLE9BQU9DO0lBQ2xDO0lBQ0FMLGNBQWMsSUFBSUMsTUFBTSxDQUFDSjtJQUN6QkssTUFBTU4sVUFBVU8sT0FBTyxDQUFDSDtJQUN4QixJQUFJRSxRQUFRLENBQUMsS0FBS0EsTUFBTSxNQUFNSCxNQUFNO1FBQ2hDLE9BQU87SUFDWDtJQUNBLE9BQU9ZO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bmb3JtYXRqcy9pbnRsLWxvY2FsZW1hdGNoZXIvbGliL2Fic3RyYWN0L1VuaWNvZGVFeHRlbnNpb25WYWx1ZS5qcz81Y2Q2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGludmFyaWFudCB9IGZyb20gJy4vdXRpbHMnO1xuLyoqXG4gKiBodHRwczovL3RjMzkuZXMvZWNtYTQwMi8jc2VjLXVuaWNvZGVleHRlbnNpb252YWx1ZVxuICogQHBhcmFtIGV4dGVuc2lvblxuICogQHBhcmFtIGtleVxuICovXG5leHBvcnQgZnVuY3Rpb24gVW5pY29kZUV4dGVuc2lvblZhbHVlKGV4dGVuc2lvbiwga2V5KSB7XG4gICAgaW52YXJpYW50KGtleS5sZW5ndGggPT09IDIsICdrZXkgbXVzdCBoYXZlIDIgZWxlbWVudHMnKTtcbiAgICB2YXIgc2l6ZSA9IGV4dGVuc2lvbi5sZW5ndGg7XG4gICAgdmFyIHNlYXJjaFZhbHVlID0gXCItXCIuY29uY2F0KGtleSwgXCItXCIpO1xuICAgIHZhciBwb3MgPSBleHRlbnNpb24uaW5kZXhPZihzZWFyY2hWYWx1ZSk7XG4gICAgaWYgKHBvcyAhPT0gLTEpIHtcbiAgICAgICAgdmFyIHN0YXJ0ID0gcG9zICsgNDtcbiAgICAgICAgdmFyIGVuZCA9IHN0YXJ0O1xuICAgICAgICB2YXIgayA9IHN0YXJ0O1xuICAgICAgICB2YXIgZG9uZSA9IGZhbHNlO1xuICAgICAgICB3aGlsZSAoIWRvbmUpIHtcbiAgICAgICAgICAgIHZhciBlID0gZXh0ZW5zaW9uLmluZGV4T2YoJy0nLCBrKTtcbiAgICAgICAgICAgIHZhciBsZW4gPSB2b2lkIDA7XG4gICAgICAgICAgICBpZiAoZSA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICBsZW4gPSBzaXplIC0gaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGxlbiA9IGUgLSBrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGxlbiA9PT0gMikge1xuICAgICAgICAgICAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoZSA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICBlbmQgPSBzaXplO1xuICAgICAgICAgICAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZW5kID0gZTtcbiAgICAgICAgICAgICAgICBrID0gZSArIDE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGV4dGVuc2lvbi5zbGljZShzdGFydCwgZW5kKTtcbiAgICB9XG4gICAgc2VhcmNoVmFsdWUgPSBcIi1cIi5jb25jYXQoa2V5KTtcbiAgICBwb3MgPSBleHRlbnNpb24uaW5kZXhPZihzZWFyY2hWYWx1ZSk7XG4gICAgaWYgKHBvcyAhPT0gLTEgJiYgcG9zICsgMyA9PT0gc2l6ZSkge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG59XG4iXSwibmFtZXMiOlsiaW52YXJpYW50IiwiVW5pY29kZUV4dGVuc2lvblZhbHVlIiwiZXh0ZW5zaW9uIiwia2V5IiwibGVuZ3RoIiwic2l6ZSIsInNlYXJjaFZhbHVlIiwiY29uY2F0IiwicG9zIiwiaW5kZXhPZiIsInN0YXJ0IiwiZW5kIiwiayIsImRvbmUiLCJlIiwibGVuIiwic2xpY2UiLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/UnicodeExtensionValue.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/utils.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@formatjs/intl-localematcher/lib/abstract/utils.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UNICODE_EXTENSION_SEQUENCE_REGEX: () => (/* binding */ UNICODE_EXTENSION_SEQUENCE_REGEX),\n/* harmony export */   invariant: () => (/* binding */ invariant)\n/* harmony export */ });\nvar UNICODE_EXTENSION_SEQUENCE_REGEX = /-u(?:-[0-9a-z]{2,8})+/gi;\nfunction invariant(condition, message, Err) {\n    if (Err === void 0) {\n        Err = Error;\n    }\n    if (!condition) {\n        throw new Err(message);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0Bmb3JtYXRqcy9pbnRsLWxvY2FsZW1hdGNoZXIvbGliL2Fic3RyYWN0L3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sSUFBSUEsbUNBQW1DLDBCQUEwQjtBQUNqRSxTQUFTQyxVQUFVQyxTQUFTLEVBQUVDLE9BQU8sRUFBRUMsR0FBRztJQUM3QyxJQUFJQSxRQUFRLEtBQUssR0FBRztRQUFFQSxNQUFNQztJQUFPO0lBQ25DLElBQUksQ0FBQ0gsV0FBVztRQUNaLE1BQU0sSUFBSUUsSUFBSUQ7SUFDbEI7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGZvcm1hdGpzL2ludGwtbG9jYWxlbWF0Y2hlci9saWIvYWJzdHJhY3QvdXRpbHMuanM/ZjFjOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIFVOSUNPREVfRVhURU5TSU9OX1NFUVVFTkNFX1JFR0VYID0gLy11KD86LVswLTlhLXpdezIsOH0pKy9naTtcbmV4cG9ydCBmdW5jdGlvbiBpbnZhcmlhbnQoY29uZGl0aW9uLCBtZXNzYWdlLCBFcnIpIHtcbiAgICBpZiAoRXJyID09PSB2b2lkIDApIHsgRXJyID0gRXJyb3I7IH1cbiAgICBpZiAoIWNvbmRpdGlvbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyKG1lc3NhZ2UpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJVTklDT0RFX0VYVEVOU0lPTl9TRVFVRU5DRV9SRUdFWCIsImludmFyaWFudCIsImNvbmRpdGlvbiIsIm1lc3NhZ2UiLCJFcnIiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/utils.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@formatjs/intl-localematcher/lib/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@formatjs/intl-localematcher/lib/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LookupSupportedLocales: () => (/* reexport safe */ _abstract_LookupSupportedLocales__WEBPACK_IMPORTED_MODULE_2__.LookupSupportedLocales),\n/* harmony export */   ResolveLocale: () => (/* reexport safe */ _abstract_ResolveLocale__WEBPACK_IMPORTED_MODULE_1__.ResolveLocale),\n/* harmony export */   match: () => (/* binding */ match)\n/* harmony export */ });\n/* harmony import */ var _abstract_CanonicalizeLocaleList__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract/CanonicalizeLocaleList */ \"(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/CanonicalizeLocaleList.js\");\n/* harmony import */ var _abstract_ResolveLocale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./abstract/ResolveLocale */ \"(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/ResolveLocale.js\");\n/* harmony import */ var _abstract_LookupSupportedLocales__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./abstract/LookupSupportedLocales */ \"(middleware)/./node_modules/@formatjs/intl-localematcher/lib/abstract/LookupSupportedLocales.js\");\n\n\nfunction match(requestedLocales, availableLocales, defaultLocale, opts) {\n    var locales = availableLocales.reduce(function(all, l) {\n        all.add(l);\n        return all;\n    }, new Set());\n    return (0,_abstract_ResolveLocale__WEBPACK_IMPORTED_MODULE_1__.ResolveLocale)(locales, (0,_abstract_CanonicalizeLocaleList__WEBPACK_IMPORTED_MODULE_0__.CanonicalizeLocaleList)(requestedLocales), {\n        localeMatcher: (opts === null || opts === void 0 ? void 0 : opts.algorithm) || \"best fit\"\n    }, [], {}, function() {\n        return defaultLocale;\n    }).locale;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0Bmb3JtYXRqcy9pbnRsLWxvY2FsZW1hdGNoZXIvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEyRTtBQUNsQjtBQUNsRCxTQUFTRSxNQUFNQyxnQkFBZ0IsRUFBRUMsZ0JBQWdCLEVBQUVDLGFBQWEsRUFBRUMsSUFBSTtJQUN6RSxJQUFJQyxVQUFVSCxpQkFBaUJJLE1BQU0sQ0FBQyxTQUFVQyxHQUFHLEVBQUVDLENBQUM7UUFDbERELElBQUlFLEdBQUcsQ0FBQ0Q7UUFDUixPQUFPRDtJQUNYLEdBQUcsSUFBSUc7SUFDUCxPQUFPWCxzRUFBYUEsQ0FBQ00sU0FBU1Asd0ZBQXNCQSxDQUFDRyxtQkFBbUI7UUFDcEVVLGVBQWUsQ0FBQ1AsU0FBUyxRQUFRQSxTQUFTLEtBQUssSUFBSSxLQUFLLElBQUlBLEtBQUtRLFNBQVMsS0FBSztJQUNuRixHQUFHLEVBQUUsRUFBRSxDQUFDLEdBQUc7UUFBYyxPQUFPVDtJQUFlLEdBQUdVLE1BQU07QUFDNUQ7QUFDMkU7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bmb3JtYXRqcy9pbnRsLWxvY2FsZW1hdGNoZXIvbGliL2luZGV4LmpzP2I3M2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2Fub25pY2FsaXplTG9jYWxlTGlzdCB9IGZyb20gJy4vYWJzdHJhY3QvQ2Fub25pY2FsaXplTG9jYWxlTGlzdCc7XG5pbXBvcnQgeyBSZXNvbHZlTG9jYWxlIH0gZnJvbSAnLi9hYnN0cmFjdC9SZXNvbHZlTG9jYWxlJztcbmV4cG9ydCBmdW5jdGlvbiBtYXRjaChyZXF1ZXN0ZWRMb2NhbGVzLCBhdmFpbGFibGVMb2NhbGVzLCBkZWZhdWx0TG9jYWxlLCBvcHRzKSB7XG4gICAgdmFyIGxvY2FsZXMgPSBhdmFpbGFibGVMb2NhbGVzLnJlZHVjZShmdW5jdGlvbiAoYWxsLCBsKSB7XG4gICAgICAgIGFsbC5hZGQobCk7XG4gICAgICAgIHJldHVybiBhbGw7XG4gICAgfSwgbmV3IFNldCgpKTtcbiAgICByZXR1cm4gUmVzb2x2ZUxvY2FsZShsb2NhbGVzLCBDYW5vbmljYWxpemVMb2NhbGVMaXN0KHJlcXVlc3RlZExvY2FsZXMpLCB7XG4gICAgICAgIGxvY2FsZU1hdGNoZXI6IChvcHRzID09PSBudWxsIHx8IG9wdHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdHMuYWxnb3JpdGhtKSB8fCAnYmVzdCBmaXQnLFxuICAgIH0sIFtdLCB7fSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZGVmYXVsdExvY2FsZTsgfSkubG9jYWxlO1xufVxuZXhwb3J0IHsgTG9va3VwU3VwcG9ydGVkTG9jYWxlcyB9IGZyb20gJy4vYWJzdHJhY3QvTG9va3VwU3VwcG9ydGVkTG9jYWxlcyc7XG5leHBvcnQgeyBSZXNvbHZlTG9jYWxlIH0gZnJvbSAnLi9hYnN0cmFjdC9SZXNvbHZlTG9jYWxlJztcbiJdLCJuYW1lcyI6WyJDYW5vbmljYWxpemVMb2NhbGVMaXN0IiwiUmVzb2x2ZUxvY2FsZSIsIm1hdGNoIiwicmVxdWVzdGVkTG9jYWxlcyIsImF2YWlsYWJsZUxvY2FsZXMiLCJkZWZhdWx0TG9jYWxlIiwib3B0cyIsImxvY2FsZXMiLCJyZWR1Y2UiLCJhbGwiLCJsIiwiYWRkIiwiU2V0IiwibG9jYWxlTWF0Y2hlciIsImFsZ29yaXRobSIsImxvY2FsZSIsIkxvb2t1cFN1cHBvcnRlZExvY2FsZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@formatjs/intl-localematcher/lib/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/negotiator/index.js":
/*!******************************************!*\
  !*** ./node_modules/negotiator/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*!\n * negotiator\n * Copyright(c) 2012 Federico Romero\n * Copyright(c) 2012-2014 Isaac Z. Schlueter\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */ \nvar preferredCharsets = __webpack_require__(/*! ./lib/charset */ \"(middleware)/./node_modules/negotiator/lib/charset.js\");\nvar preferredEncodings = __webpack_require__(/*! ./lib/encoding */ \"(middleware)/./node_modules/negotiator/lib/encoding.js\");\nvar preferredLanguages = __webpack_require__(/*! ./lib/language */ \"(middleware)/./node_modules/negotiator/lib/language.js\");\nvar preferredMediaTypes = __webpack_require__(/*! ./lib/mediaType */ \"(middleware)/./node_modules/negotiator/lib/mediaType.js\");\n/**\n * Module exports.\n * @public\n */ module.exports = Negotiator;\nmodule.exports.Negotiator = Negotiator;\n/**\n * Create a Negotiator instance from a request.\n * @param {object} request\n * @public\n */ function Negotiator(request) {\n    if (!(this instanceof Negotiator)) {\n        return new Negotiator(request);\n    }\n    this.request = request;\n}\nNegotiator.prototype.charset = function charset(available) {\n    var set = this.charsets(available);\n    return set && set[0];\n};\nNegotiator.prototype.charsets = function charsets(available) {\n    return preferredCharsets(this.request.headers[\"accept-charset\"], available);\n};\nNegotiator.prototype.encoding = function encoding(available) {\n    var set = this.encodings(available);\n    return set && set[0];\n};\nNegotiator.prototype.encodings = function encodings(available) {\n    return preferredEncodings(this.request.headers[\"accept-encoding\"], available);\n};\nNegotiator.prototype.language = function language(available) {\n    var set = this.languages(available);\n    return set && set[0];\n};\nNegotiator.prototype.languages = function languages(available) {\n    return preferredLanguages(this.request.headers[\"accept-language\"], available);\n};\nNegotiator.prototype.mediaType = function mediaType(available) {\n    var set = this.mediaTypes(available);\n    return set && set[0];\n};\nNegotiator.prototype.mediaTypes = function mediaTypes(available) {\n    return preferredMediaTypes(this.request.headers.accept, available);\n};\n// Backwards compatibility\nNegotiator.prototype.preferredCharset = Negotiator.prototype.charset;\nNegotiator.prototype.preferredCharsets = Negotiator.prototype.charsets;\nNegotiator.prototype.preferredEncoding = Negotiator.prototype.encoding;\nNegotiator.prototype.preferredEncodings = Negotiator.prototype.encodings;\nNegotiator.prototype.preferredLanguage = Negotiator.prototype.language;\nNegotiator.prototype.preferredLanguages = Negotiator.prototype.languages;\nNegotiator.prototype.preferredMediaType = Negotiator.prototype.mediaType;\nNegotiator.prototype.preferredMediaTypes = Negotiator.prototype.mediaTypes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25lZ290aWF0b3IvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztDQU1DLEdBRUQ7QUFFQSxJQUFJQSxvQkFBb0JDLG1CQUFPQSxDQUFDO0FBQ2hDLElBQUlDLHFCQUFxQkQsbUJBQU9BLENBQUM7QUFDakMsSUFBSUUscUJBQXFCRixtQkFBT0EsQ0FBQztBQUNqQyxJQUFJRyxzQkFBc0JILG1CQUFPQSxDQUFDO0FBRWxDOzs7Q0FHQyxHQUVESSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCRix5QkFBeUIsR0FBR0U7QUFFNUI7Ozs7Q0FJQyxHQUVELFNBQVNBLFdBQVdDLE9BQU87SUFDekIsSUFBSSxDQUFFLEtBQUksWUFBWUQsVUFBUyxHQUFJO1FBQ2pDLE9BQU8sSUFBSUEsV0FBV0M7SUFDeEI7SUFFQSxJQUFJLENBQUNBLE9BQU8sR0FBR0E7QUFDakI7QUFFQUQsV0FBV0UsU0FBUyxDQUFDQyxPQUFPLEdBQUcsU0FBU0EsUUFBUUMsU0FBUztJQUN2RCxJQUFJQyxNQUFNLElBQUksQ0FBQ0MsUUFBUSxDQUFDRjtJQUN4QixPQUFPQyxPQUFPQSxHQUFHLENBQUMsRUFBRTtBQUN0QjtBQUVBTCxXQUFXRSxTQUFTLENBQUNJLFFBQVEsR0FBRyxTQUFTQSxTQUFTRixTQUFTO0lBQ3pELE9BQU9YLGtCQUFrQixJQUFJLENBQUNRLE9BQU8sQ0FBQ00sT0FBTyxDQUFDLGlCQUFpQixFQUFFSDtBQUNuRTtBQUVBSixXQUFXRSxTQUFTLENBQUNNLFFBQVEsR0FBRyxTQUFTQSxTQUFTSixTQUFTO0lBQ3pELElBQUlDLE1BQU0sSUFBSSxDQUFDSSxTQUFTLENBQUNMO0lBQ3pCLE9BQU9DLE9BQU9BLEdBQUcsQ0FBQyxFQUFFO0FBQ3RCO0FBRUFMLFdBQVdFLFNBQVMsQ0FBQ08sU0FBUyxHQUFHLFNBQVNBLFVBQVVMLFNBQVM7SUFDM0QsT0FBT1QsbUJBQW1CLElBQUksQ0FBQ00sT0FBTyxDQUFDTSxPQUFPLENBQUMsa0JBQWtCLEVBQUVIO0FBQ3JFO0FBRUFKLFdBQVdFLFNBQVMsQ0FBQ1EsUUFBUSxHQUFHLFNBQVNBLFNBQVNOLFNBQVM7SUFDekQsSUFBSUMsTUFBTSxJQUFJLENBQUNNLFNBQVMsQ0FBQ1A7SUFDekIsT0FBT0MsT0FBT0EsR0FBRyxDQUFDLEVBQUU7QUFDdEI7QUFFQUwsV0FBV0UsU0FBUyxDQUFDUyxTQUFTLEdBQUcsU0FBU0EsVUFBVVAsU0FBUztJQUMzRCxPQUFPUixtQkFBbUIsSUFBSSxDQUFDSyxPQUFPLENBQUNNLE9BQU8sQ0FBQyxrQkFBa0IsRUFBRUg7QUFDckU7QUFFQUosV0FBV0UsU0FBUyxDQUFDVSxTQUFTLEdBQUcsU0FBU0EsVUFBVVIsU0FBUztJQUMzRCxJQUFJQyxNQUFNLElBQUksQ0FBQ1EsVUFBVSxDQUFDVDtJQUMxQixPQUFPQyxPQUFPQSxHQUFHLENBQUMsRUFBRTtBQUN0QjtBQUVBTCxXQUFXRSxTQUFTLENBQUNXLFVBQVUsR0FBRyxTQUFTQSxXQUFXVCxTQUFTO0lBQzdELE9BQU9QLG9CQUFvQixJQUFJLENBQUNJLE9BQU8sQ0FBQ00sT0FBTyxDQUFDTyxNQUFNLEVBQUVWO0FBQzFEO0FBRUEsMEJBQTBCO0FBQzFCSixXQUFXRSxTQUFTLENBQUNhLGdCQUFnQixHQUFHZixXQUFXRSxTQUFTLENBQUNDLE9BQU87QUFDcEVILFdBQVdFLFNBQVMsQ0FBQ1QsaUJBQWlCLEdBQUdPLFdBQVdFLFNBQVMsQ0FBQ0ksUUFBUTtBQUN0RU4sV0FBV0UsU0FBUyxDQUFDYyxpQkFBaUIsR0FBR2hCLFdBQVdFLFNBQVMsQ0FBQ00sUUFBUTtBQUN0RVIsV0FBV0UsU0FBUyxDQUFDUCxrQkFBa0IsR0FBR0ssV0FBV0UsU0FBUyxDQUFDTyxTQUFTO0FBQ3hFVCxXQUFXRSxTQUFTLENBQUNlLGlCQUFpQixHQUFHakIsV0FBV0UsU0FBUyxDQUFDUSxRQUFRO0FBQ3RFVixXQUFXRSxTQUFTLENBQUNOLGtCQUFrQixHQUFHSSxXQUFXRSxTQUFTLENBQUNTLFNBQVM7QUFDeEVYLFdBQVdFLFNBQVMsQ0FBQ2dCLGtCQUFrQixHQUFHbEIsV0FBV0UsU0FBUyxDQUFDVSxTQUFTO0FBQ3hFWixXQUFXRSxTQUFTLENBQUNMLG1CQUFtQixHQUFHRyxXQUFXRSxTQUFTLENBQUNXLFVBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lZ290aWF0b3IvaW5kZXguanM/ODE2NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIG5lZ290aWF0b3JcbiAqIENvcHlyaWdodChjKSAyMDEyIEZlZGVyaWNvIFJvbWVyb1xuICogQ29weXJpZ2h0KGMpIDIwMTItMjAxNCBJc2FhYyBaLiBTY2hsdWV0ZXJcbiAqIENvcHlyaWdodChjKSAyMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBwcmVmZXJyZWRDaGFyc2V0cyA9IHJlcXVpcmUoJy4vbGliL2NoYXJzZXQnKVxudmFyIHByZWZlcnJlZEVuY29kaW5ncyA9IHJlcXVpcmUoJy4vbGliL2VuY29kaW5nJylcbnZhciBwcmVmZXJyZWRMYW5ndWFnZXMgPSByZXF1aXJlKCcuL2xpYi9sYW5ndWFnZScpXG52YXIgcHJlZmVycmVkTWVkaWFUeXBlcyA9IHJlcXVpcmUoJy4vbGliL21lZGlhVHlwZScpXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKiBAcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBOZWdvdGlhdG9yO1xubW9kdWxlLmV4cG9ydHMuTmVnb3RpYXRvciA9IE5lZ290aWF0b3I7XG5cbi8qKlxuICogQ3JlYXRlIGEgTmVnb3RpYXRvciBpbnN0YW5jZSBmcm9tIGEgcmVxdWVzdC5cbiAqIEBwYXJhbSB7b2JqZWN0fSByZXF1ZXN0XG4gKiBAcHVibGljXG4gKi9cblxuZnVuY3Rpb24gTmVnb3RpYXRvcihyZXF1ZXN0KSB7XG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBOZWdvdGlhdG9yKSkge1xuICAgIHJldHVybiBuZXcgTmVnb3RpYXRvcihyZXF1ZXN0KTtcbiAgfVxuXG4gIHRoaXMucmVxdWVzdCA9IHJlcXVlc3Q7XG59XG5cbk5lZ290aWF0b3IucHJvdG90eXBlLmNoYXJzZXQgPSBmdW5jdGlvbiBjaGFyc2V0KGF2YWlsYWJsZSkge1xuICB2YXIgc2V0ID0gdGhpcy5jaGFyc2V0cyhhdmFpbGFibGUpO1xuICByZXR1cm4gc2V0ICYmIHNldFswXTtcbn07XG5cbk5lZ290aWF0b3IucHJvdG90eXBlLmNoYXJzZXRzID0gZnVuY3Rpb24gY2hhcnNldHMoYXZhaWxhYmxlKSB7XG4gIHJldHVybiBwcmVmZXJyZWRDaGFyc2V0cyh0aGlzLnJlcXVlc3QuaGVhZGVyc1snYWNjZXB0LWNoYXJzZXQnXSwgYXZhaWxhYmxlKTtcbn07XG5cbk5lZ290aWF0b3IucHJvdG90eXBlLmVuY29kaW5nID0gZnVuY3Rpb24gZW5jb2RpbmcoYXZhaWxhYmxlKSB7XG4gIHZhciBzZXQgPSB0aGlzLmVuY29kaW5ncyhhdmFpbGFibGUpO1xuICByZXR1cm4gc2V0ICYmIHNldFswXTtcbn07XG5cbk5lZ290aWF0b3IucHJvdG90eXBlLmVuY29kaW5ncyA9IGZ1bmN0aW9uIGVuY29kaW5ncyhhdmFpbGFibGUpIHtcbiAgcmV0dXJuIHByZWZlcnJlZEVuY29kaW5ncyh0aGlzLnJlcXVlc3QuaGVhZGVyc1snYWNjZXB0LWVuY29kaW5nJ10sIGF2YWlsYWJsZSk7XG59O1xuXG5OZWdvdGlhdG9yLnByb3RvdHlwZS5sYW5ndWFnZSA9IGZ1bmN0aW9uIGxhbmd1YWdlKGF2YWlsYWJsZSkge1xuICB2YXIgc2V0ID0gdGhpcy5sYW5ndWFnZXMoYXZhaWxhYmxlKTtcbiAgcmV0dXJuIHNldCAmJiBzZXRbMF07XG59O1xuXG5OZWdvdGlhdG9yLnByb3RvdHlwZS5sYW5ndWFnZXMgPSBmdW5jdGlvbiBsYW5ndWFnZXMoYXZhaWxhYmxlKSB7XG4gIHJldHVybiBwcmVmZXJyZWRMYW5ndWFnZXModGhpcy5yZXF1ZXN0LmhlYWRlcnNbJ2FjY2VwdC1sYW5ndWFnZSddLCBhdmFpbGFibGUpO1xufTtcblxuTmVnb3RpYXRvci5wcm90b3R5cGUubWVkaWFUeXBlID0gZnVuY3Rpb24gbWVkaWFUeXBlKGF2YWlsYWJsZSkge1xuICB2YXIgc2V0ID0gdGhpcy5tZWRpYVR5cGVzKGF2YWlsYWJsZSk7XG4gIHJldHVybiBzZXQgJiYgc2V0WzBdO1xufTtcblxuTmVnb3RpYXRvci5wcm90b3R5cGUubWVkaWFUeXBlcyA9IGZ1bmN0aW9uIG1lZGlhVHlwZXMoYXZhaWxhYmxlKSB7XG4gIHJldHVybiBwcmVmZXJyZWRNZWRpYVR5cGVzKHRoaXMucmVxdWVzdC5oZWFkZXJzLmFjY2VwdCwgYXZhaWxhYmxlKTtcbn07XG5cbi8vIEJhY2t3YXJkcyBjb21wYXRpYmlsaXR5XG5OZWdvdGlhdG9yLnByb3RvdHlwZS5wcmVmZXJyZWRDaGFyc2V0ID0gTmVnb3RpYXRvci5wcm90b3R5cGUuY2hhcnNldDtcbk5lZ290aWF0b3IucHJvdG90eXBlLnByZWZlcnJlZENoYXJzZXRzID0gTmVnb3RpYXRvci5wcm90b3R5cGUuY2hhcnNldHM7XG5OZWdvdGlhdG9yLnByb3RvdHlwZS5wcmVmZXJyZWRFbmNvZGluZyA9IE5lZ290aWF0b3IucHJvdG90eXBlLmVuY29kaW5nO1xuTmVnb3RpYXRvci5wcm90b3R5cGUucHJlZmVycmVkRW5jb2RpbmdzID0gTmVnb3RpYXRvci5wcm90b3R5cGUuZW5jb2RpbmdzO1xuTmVnb3RpYXRvci5wcm90b3R5cGUucHJlZmVycmVkTGFuZ3VhZ2UgPSBOZWdvdGlhdG9yLnByb3RvdHlwZS5sYW5ndWFnZTtcbk5lZ290aWF0b3IucHJvdG90eXBlLnByZWZlcnJlZExhbmd1YWdlcyA9IE5lZ290aWF0b3IucHJvdG90eXBlLmxhbmd1YWdlcztcbk5lZ290aWF0b3IucHJvdG90eXBlLnByZWZlcnJlZE1lZGlhVHlwZSA9IE5lZ290aWF0b3IucHJvdG90eXBlLm1lZGlhVHlwZTtcbk5lZ290aWF0b3IucHJvdG90eXBlLnByZWZlcnJlZE1lZGlhVHlwZXMgPSBOZWdvdGlhdG9yLnByb3RvdHlwZS5tZWRpYVR5cGVzO1xuIl0sIm5hbWVzIjpbInByZWZlcnJlZENoYXJzZXRzIiwicmVxdWlyZSIsInByZWZlcnJlZEVuY29kaW5ncyIsInByZWZlcnJlZExhbmd1YWdlcyIsInByZWZlcnJlZE1lZGlhVHlwZXMiLCJtb2R1bGUiLCJleHBvcnRzIiwiTmVnb3RpYXRvciIsInJlcXVlc3QiLCJwcm90b3R5cGUiLCJjaGFyc2V0IiwiYXZhaWxhYmxlIiwic2V0IiwiY2hhcnNldHMiLCJoZWFkZXJzIiwiZW5jb2RpbmciLCJlbmNvZGluZ3MiLCJsYW5ndWFnZSIsImxhbmd1YWdlcyIsIm1lZGlhVHlwZSIsIm1lZGlhVHlwZXMiLCJhY2NlcHQiLCJwcmVmZXJyZWRDaGFyc2V0IiwicHJlZmVycmVkRW5jb2RpbmciLCJwcmVmZXJyZWRMYW5ndWFnZSIsInByZWZlcnJlZE1lZGlhVHlwZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/negotiator/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/negotiator/lib/charset.js":
/*!************************************************!*\
  !*** ./node_modules/negotiator/lib/charset.js ***!
  \************************************************/
/***/ ((module) => {

eval("/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */ \n/**\n * Module exports.\n * @public\n */ module.exports = preferredCharsets;\nmodule.exports.preferredCharsets = preferredCharsets;\n/**\n * Module variables.\n * @private\n */ var simpleCharsetRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n/**\n * Parse the Accept-Charset header.\n * @private\n */ function parseAcceptCharset(accept) {\n    var accepts = accept.split(\",\");\n    for(var i = 0, j = 0; i < accepts.length; i++){\n        var charset = parseCharset(accepts[i].trim(), i);\n        if (charset) {\n            accepts[j++] = charset;\n        }\n    }\n    // trim accepts\n    accepts.length = j;\n    return accepts;\n}\n/**\n * Parse a charset from the Accept-Charset header.\n * @private\n */ function parseCharset(str, i) {\n    var match = simpleCharsetRegExp.exec(str);\n    if (!match) return null;\n    var charset = match[1];\n    var q = 1;\n    if (match[2]) {\n        var params = match[2].split(\";\");\n        for(var j = 0; j < params.length; j++){\n            var p = params[j].trim().split(\"=\");\n            if (p[0] === \"q\") {\n                q = parseFloat(p[1]);\n                break;\n            }\n        }\n    }\n    return {\n        charset: charset,\n        q: q,\n        i: i\n    };\n}\n/**\n * Get the priority of a charset.\n * @private\n */ function getCharsetPriority(charset, accepted, index) {\n    var priority = {\n        o: -1,\n        q: 0,\n        s: 0\n    };\n    for(var i = 0; i < accepted.length; i++){\n        var spec = specify(charset, accepted[i], index);\n        if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n            priority = spec;\n        }\n    }\n    return priority;\n}\n/**\n * Get the specificity of the charset.\n * @private\n */ function specify(charset, spec, index) {\n    var s = 0;\n    if (spec.charset.toLowerCase() === charset.toLowerCase()) {\n        s |= 1;\n    } else if (spec.charset !== \"*\") {\n        return null;\n    }\n    return {\n        i: index,\n        o: spec.i,\n        q: spec.q,\n        s: s\n    };\n}\n/**\n * Get the preferred charsets from an Accept-Charset header.\n * @public\n */ function preferredCharsets(accept, provided) {\n    // RFC 2616 sec 14.2: no header = *\n    var accepts = parseAcceptCharset(accept === undefined ? \"*\" : accept || \"\");\n    if (!provided) {\n        // sorted list of all charsets\n        return accepts.filter(isQuality).sort(compareSpecs).map(getFullCharset);\n    }\n    var priorities = provided.map(function getPriority(type, index) {\n        return getCharsetPriority(type, accepts, index);\n    });\n    // sorted list of accepted charsets\n    return priorities.filter(isQuality).sort(compareSpecs).map(function getCharset(priority) {\n        return provided[priorities.indexOf(priority)];\n    });\n}\n/**\n * Compare two specs.\n * @private\n */ function compareSpecs(a, b) {\n    return b.q - a.q || b.s - a.s || a.o - b.o || a.i - b.i || 0;\n}\n/**\n * Get full charset string.\n * @private\n */ function getFullCharset(spec) {\n    return spec.charset;\n}\n/**\n * Check if a spec has any quality.\n * @private\n */ function isQuality(spec) {\n    return spec.q > 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/negotiator/lib/charset.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/negotiator/lib/encoding.js":
/*!*************************************************!*\
  !*** ./node_modules/negotiator/lib/encoding.js ***!
  \*************************************************/
/***/ ((module) => {

eval("/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */ \n/**\n * Module exports.\n * @public\n */ module.exports = preferredEncodings;\nmodule.exports.preferredEncodings = preferredEncodings;\n/**\n * Module variables.\n * @private\n */ var simpleEncodingRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n/**\n * Parse the Accept-Encoding header.\n * @private\n */ function parseAcceptEncoding(accept) {\n    var accepts = accept.split(\",\");\n    var hasIdentity = false;\n    var minQuality = 1;\n    for(var i = 0, j = 0; i < accepts.length; i++){\n        var encoding = parseEncoding(accepts[i].trim(), i);\n        if (encoding) {\n            accepts[j++] = encoding;\n            hasIdentity = hasIdentity || specify(\"identity\", encoding);\n            minQuality = Math.min(minQuality, encoding.q || 1);\n        }\n    }\n    if (!hasIdentity) {\n        /*\n     * If identity doesn't explicitly appear in the accept-encoding header,\n     * it's added to the list of acceptable encoding with the lowest q\n     */ accepts[j++] = {\n            encoding: \"identity\",\n            q: minQuality,\n            i: i\n        };\n    }\n    // trim accepts\n    accepts.length = j;\n    return accepts;\n}\n/**\n * Parse an encoding from the Accept-Encoding header.\n * @private\n */ function parseEncoding(str, i) {\n    var match = simpleEncodingRegExp.exec(str);\n    if (!match) return null;\n    var encoding = match[1];\n    var q = 1;\n    if (match[2]) {\n        var params = match[2].split(\";\");\n        for(var j = 0; j < params.length; j++){\n            var p = params[j].trim().split(\"=\");\n            if (p[0] === \"q\") {\n                q = parseFloat(p[1]);\n                break;\n            }\n        }\n    }\n    return {\n        encoding: encoding,\n        q: q,\n        i: i\n    };\n}\n/**\n * Get the priority of an encoding.\n * @private\n */ function getEncodingPriority(encoding, accepted, index) {\n    var priority = {\n        o: -1,\n        q: 0,\n        s: 0\n    };\n    for(var i = 0; i < accepted.length; i++){\n        var spec = specify(encoding, accepted[i], index);\n        if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n            priority = spec;\n        }\n    }\n    return priority;\n}\n/**\n * Get the specificity of the encoding.\n * @private\n */ function specify(encoding, spec, index) {\n    var s = 0;\n    if (spec.encoding.toLowerCase() === encoding.toLowerCase()) {\n        s |= 1;\n    } else if (spec.encoding !== \"*\") {\n        return null;\n    }\n    return {\n        i: index,\n        o: spec.i,\n        q: spec.q,\n        s: s\n    };\n}\n;\n/**\n * Get the preferred encodings from an Accept-Encoding header.\n * @public\n */ function preferredEncodings(accept, provided) {\n    var accepts = parseAcceptEncoding(accept || \"\");\n    if (!provided) {\n        // sorted list of all encodings\n        return accepts.filter(isQuality).sort(compareSpecs).map(getFullEncoding);\n    }\n    var priorities = provided.map(function getPriority(type, index) {\n        return getEncodingPriority(type, accepts, index);\n    });\n    // sorted list of accepted encodings\n    return priorities.filter(isQuality).sort(compareSpecs).map(function getEncoding(priority) {\n        return provided[priorities.indexOf(priority)];\n    });\n}\n/**\n * Compare two specs.\n * @private\n */ function compareSpecs(a, b) {\n    return b.q - a.q || b.s - a.s || a.o - b.o || a.i - b.i || 0;\n}\n/**\n * Get full encoding string.\n * @private\n */ function getFullEncoding(spec) {\n    return spec.encoding;\n}\n/**\n * Check if a spec has any quality.\n * @private\n */ function isQuality(spec) {\n    return spec.q > 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/negotiator/lib/encoding.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/negotiator/lib/language.js":
/*!*************************************************!*\
  !*** ./node_modules/negotiator/lib/language.js ***!
  \*************************************************/
/***/ ((module) => {

eval("/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */ \n/**\n * Module exports.\n * @public\n */ module.exports = preferredLanguages;\nmodule.exports.preferredLanguages = preferredLanguages;\n/**\n * Module variables.\n * @private\n */ var simpleLanguageRegExp = /^\\s*([^\\s\\-;]+)(?:-([^\\s;]+))?\\s*(?:;(.*))?$/;\n/**\n * Parse the Accept-Language header.\n * @private\n */ function parseAcceptLanguage(accept) {\n    var accepts = accept.split(\",\");\n    for(var i = 0, j = 0; i < accepts.length; i++){\n        var language = parseLanguage(accepts[i].trim(), i);\n        if (language) {\n            accepts[j++] = language;\n        }\n    }\n    // trim accepts\n    accepts.length = j;\n    return accepts;\n}\n/**\n * Parse a language from the Accept-Language header.\n * @private\n */ function parseLanguage(str, i) {\n    var match = simpleLanguageRegExp.exec(str);\n    if (!match) return null;\n    var prefix = match[1];\n    var suffix = match[2];\n    var full = prefix;\n    if (suffix) full += \"-\" + suffix;\n    var q = 1;\n    if (match[3]) {\n        var params = match[3].split(\";\");\n        for(var j = 0; j < params.length; j++){\n            var p = params[j].split(\"=\");\n            if (p[0] === \"q\") q = parseFloat(p[1]);\n        }\n    }\n    return {\n        prefix: prefix,\n        suffix: suffix,\n        q: q,\n        i: i,\n        full: full\n    };\n}\n/**\n * Get the priority of a language.\n * @private\n */ function getLanguagePriority(language, accepted, index) {\n    var priority = {\n        o: -1,\n        q: 0,\n        s: 0\n    };\n    for(var i = 0; i < accepted.length; i++){\n        var spec = specify(language, accepted[i], index);\n        if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n            priority = spec;\n        }\n    }\n    return priority;\n}\n/**\n * Get the specificity of the language.\n * @private\n */ function specify(language, spec, index) {\n    var p = parseLanguage(language);\n    if (!p) return null;\n    var s = 0;\n    if (spec.full.toLowerCase() === p.full.toLowerCase()) {\n        s |= 4;\n    } else if (spec.prefix.toLowerCase() === p.full.toLowerCase()) {\n        s |= 2;\n    } else if (spec.full.toLowerCase() === p.prefix.toLowerCase()) {\n        s |= 1;\n    } else if (spec.full !== \"*\") {\n        return null;\n    }\n    return {\n        i: index,\n        o: spec.i,\n        q: spec.q,\n        s: s\n    };\n}\n;\n/**\n * Get the preferred languages from an Accept-Language header.\n * @public\n */ function preferredLanguages(accept, provided) {\n    // RFC 2616 sec 14.4: no header = *\n    var accepts = parseAcceptLanguage(accept === undefined ? \"*\" : accept || \"\");\n    if (!provided) {\n        // sorted list of all languages\n        return accepts.filter(isQuality).sort(compareSpecs).map(getFullLanguage);\n    }\n    var priorities = provided.map(function getPriority(type, index) {\n        return getLanguagePriority(type, accepts, index);\n    });\n    // sorted list of accepted languages\n    return priorities.filter(isQuality).sort(compareSpecs).map(function getLanguage(priority) {\n        return provided[priorities.indexOf(priority)];\n    });\n}\n/**\n * Compare two specs.\n * @private\n */ function compareSpecs(a, b) {\n    return b.q - a.q || b.s - a.s || a.o - b.o || a.i - b.i || 0;\n}\n/**\n * Get full language string.\n * @private\n */ function getFullLanguage(spec) {\n    return spec.full;\n}\n/**\n * Check if a spec has any quality.\n * @private\n */ function isQuality(spec) {\n    return spec.q > 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/negotiator/lib/language.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/negotiator/lib/mediaType.js":
/*!**************************************************!*\
  !*** ./node_modules/negotiator/lib/mediaType.js ***!
  \**************************************************/
/***/ ((module) => {

eval("/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */ \n/**\n * Module exports.\n * @public\n */ module.exports = preferredMediaTypes;\nmodule.exports.preferredMediaTypes = preferredMediaTypes;\n/**\n * Module variables.\n * @private\n */ var simpleMediaTypeRegExp = /^\\s*([^\\s\\/;]+)\\/([^;\\s]+)\\s*(?:;(.*))?$/;\n/**\n * Parse the Accept header.\n * @private\n */ function parseAccept(accept) {\n    var accepts = splitMediaTypes(accept);\n    for(var i = 0, j = 0; i < accepts.length; i++){\n        var mediaType = parseMediaType(accepts[i].trim(), i);\n        if (mediaType) {\n            accepts[j++] = mediaType;\n        }\n    }\n    // trim accepts\n    accepts.length = j;\n    return accepts;\n}\n/**\n * Parse a media type from the Accept header.\n * @private\n */ function parseMediaType(str, i) {\n    var match = simpleMediaTypeRegExp.exec(str);\n    if (!match) return null;\n    var params = Object.create(null);\n    var q = 1;\n    var subtype = match[2];\n    var type = match[1];\n    if (match[3]) {\n        var kvps = splitParameters(match[3]).map(splitKeyValuePair);\n        for(var j = 0; j < kvps.length; j++){\n            var pair = kvps[j];\n            var key = pair[0].toLowerCase();\n            var val = pair[1];\n            // get the value, unwrapping quotes\n            var value = val && val[0] === '\"' && val[val.length - 1] === '\"' ? val.substr(1, val.length - 2) : val;\n            if (key === \"q\") {\n                q = parseFloat(value);\n                break;\n            }\n            // store parameter\n            params[key] = value;\n        }\n    }\n    return {\n        type: type,\n        subtype: subtype,\n        params: params,\n        q: q,\n        i: i\n    };\n}\n/**\n * Get the priority of a media type.\n * @private\n */ function getMediaTypePriority(type, accepted, index) {\n    var priority = {\n        o: -1,\n        q: 0,\n        s: 0\n    };\n    for(var i = 0; i < accepted.length; i++){\n        var spec = specify(type, accepted[i], index);\n        if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n            priority = spec;\n        }\n    }\n    return priority;\n}\n/**\n * Get the specificity of the media type.\n * @private\n */ function specify(type, spec, index) {\n    var p = parseMediaType(type);\n    var s = 0;\n    if (!p) {\n        return null;\n    }\n    if (spec.type.toLowerCase() == p.type.toLowerCase()) {\n        s |= 4;\n    } else if (spec.type != \"*\") {\n        return null;\n    }\n    if (spec.subtype.toLowerCase() == p.subtype.toLowerCase()) {\n        s |= 2;\n    } else if (spec.subtype != \"*\") {\n        return null;\n    }\n    var keys = Object.keys(spec.params);\n    if (keys.length > 0) {\n        if (keys.every(function(k) {\n            return spec.params[k] == \"*\" || (spec.params[k] || \"\").toLowerCase() == (p.params[k] || \"\").toLowerCase();\n        })) {\n            s |= 1;\n        } else {\n            return null;\n        }\n    }\n    return {\n        i: index,\n        o: spec.i,\n        q: spec.q,\n        s: s\n    };\n}\n/**\n * Get the preferred media types from an Accept header.\n * @public\n */ function preferredMediaTypes(accept, provided) {\n    // RFC 2616 sec 14.2: no header = */*\n    var accepts = parseAccept(accept === undefined ? \"*/*\" : accept || \"\");\n    if (!provided) {\n        // sorted list of all types\n        return accepts.filter(isQuality).sort(compareSpecs).map(getFullType);\n    }\n    var priorities = provided.map(function getPriority(type, index) {\n        return getMediaTypePriority(type, accepts, index);\n    });\n    // sorted list of accepted types\n    return priorities.filter(isQuality).sort(compareSpecs).map(function getType(priority) {\n        return provided[priorities.indexOf(priority)];\n    });\n}\n/**\n * Compare two specs.\n * @private\n */ function compareSpecs(a, b) {\n    return b.q - a.q || b.s - a.s || a.o - b.o || a.i - b.i || 0;\n}\n/**\n * Get full type string.\n * @private\n */ function getFullType(spec) {\n    return spec.type + \"/\" + spec.subtype;\n}\n/**\n * Check if a spec has any quality.\n * @private\n */ function isQuality(spec) {\n    return spec.q > 0;\n}\n/**\n * Count the number of quotes in a string.\n * @private\n */ function quoteCount(string) {\n    var count = 0;\n    var index = 0;\n    while((index = string.indexOf('\"', index)) !== -1){\n        count++;\n        index++;\n    }\n    return count;\n}\n/**\n * Split a key value pair.\n * @private\n */ function splitKeyValuePair(str) {\n    var index = str.indexOf(\"=\");\n    var key;\n    var val;\n    if (index === -1) {\n        key = str;\n    } else {\n        key = str.substr(0, index);\n        val = str.substr(index + 1);\n    }\n    return [\n        key,\n        val\n    ];\n}\n/**\n * Split an Accept header into media types.\n * @private\n */ function splitMediaTypes(accept) {\n    var accepts = accept.split(\",\");\n    for(var i = 1, j = 0; i < accepts.length; i++){\n        if (quoteCount(accepts[j]) % 2 == 0) {\n            accepts[++j] = accepts[i];\n        } else {\n            accepts[j] += \",\" + accepts[i];\n        }\n    }\n    // trim accepts\n    accepts.length = j + 1;\n    return accepts;\n}\n/**\n * Split a string of parameters.\n * @private\n */ function splitParameters(str) {\n    var parameters = str.split(\";\");\n    for(var i = 1, j = 0; i < parameters.length; i++){\n        if (quoteCount(parameters[j]) % 2 == 0) {\n            parameters[++j] = parameters[i];\n        } else {\n            parameters[j] += \";\" + parameters[i];\n        }\n    }\n    // trim parameters\n    parameters.length = j + 1;\n    for(var i = 0; i < parameters.length; i++){\n        parameters[i] = parameters[i].trim();\n    }\n    return parameters;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/negotiator/lib/mediaType.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next-intl/dist/_virtual/_rollupPluginBabelHelpers.cjs.development.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/next-intl/dist/_virtual/_rollupPluginBabelHelpers.cjs.development.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nfunction _regeneratorRuntime() {\n    _regeneratorRuntime = function() {\n        return exports1;\n    };\n    var exports1 = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function(obj, key, desc) {\n        obj[key] = desc.value;\n    }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n    function define(obj, key, value) {\n        return Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: !0,\n            configurable: !0,\n            writable: !0\n        }), obj[key];\n    }\n    try {\n        define({}, \"\");\n    } catch (err) {\n        define = function(obj, key, value) {\n            return obj[key] = value;\n        };\n    }\n    function wrap(innerFn, outerFn, self, tryLocsList) {\n        var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []);\n        return defineProperty(generator, \"_invoke\", {\n            value: makeInvokeMethod(innerFn, self, context)\n        }), generator;\n    }\n    function tryCatch(fn, obj, arg) {\n        try {\n            return {\n                type: \"normal\",\n                arg: fn.call(obj, arg)\n            };\n        } catch (err) {\n            return {\n                type: \"throw\",\n                arg: err\n            };\n        }\n    }\n    exports1.wrap = wrap;\n    var ContinueSentinel = {};\n    function Generator() {}\n    function GeneratorFunction() {}\n    function GeneratorFunctionPrototype() {}\n    var IteratorPrototype = {};\n    define(IteratorPrototype, iteratorSymbol, function() {\n        return this;\n    });\n    var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n    NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n    function defineIteratorMethods(prototype) {\n        [\n            \"next\",\n            \"throw\",\n            \"return\"\n        ].forEach(function(method) {\n            define(prototype, method, function(arg) {\n                return this._invoke(method, arg);\n            });\n        });\n    }\n    function AsyncIterator(generator, PromiseImpl) {\n        function invoke(method, arg, resolve, reject) {\n            var record = tryCatch(generator[method], generator, arg);\n            if (\"throw\" !== record.type) {\n                var result = record.arg, value = result.value;\n                return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function(value) {\n                    invoke(\"next\", value, resolve, reject);\n                }, function(err) {\n                    invoke(\"throw\", err, resolve, reject);\n                }) : PromiseImpl.resolve(value).then(function(unwrapped) {\n                    result.value = unwrapped, resolve(result);\n                }, function(error) {\n                    return invoke(\"throw\", error, resolve, reject);\n                });\n            }\n            reject(record.arg);\n        }\n        var previousPromise;\n        defineProperty(this, \"_invoke\", {\n            value: function(method, arg) {\n                function callInvokeWithMethodAndArg() {\n                    return new PromiseImpl(function(resolve, reject) {\n                        invoke(method, arg, resolve, reject);\n                    });\n                }\n                return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n            }\n        });\n    }\n    function makeInvokeMethod(innerFn, self, context) {\n        var state = \"suspendedStart\";\n        return function(method, arg) {\n            if (\"executing\" === state) throw new Error(\"Generator is already running\");\n            if (\"completed\" === state) {\n                if (\"throw\" === method) throw arg;\n                return doneResult();\n            }\n            for(context.method = method, context.arg = arg;;){\n                var delegate = context.delegate;\n                if (delegate) {\n                    var delegateResult = maybeInvokeDelegate(delegate, context);\n                    if (delegateResult) {\n                        if (delegateResult === ContinueSentinel) continue;\n                        return delegateResult;\n                    }\n                }\n                if (\"next\" === context.method) context.sent = context._sent = context.arg;\n                else if (\"throw\" === context.method) {\n                    if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n                    context.dispatchException(context.arg);\n                } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n                state = \"executing\";\n                var record = tryCatch(innerFn, self, context);\n                if (\"normal\" === record.type) {\n                    if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n                    return {\n                        value: record.arg,\n                        done: context.done\n                    };\n                }\n                \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n            }\n        };\n    }\n    function maybeInvokeDelegate(delegate, context) {\n        var methodName = context.method, method = delegate.iterator[methodName];\n        if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n        var record = tryCatch(method, delegate.iterator, context.arg);\n        if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n        var info = record.arg;\n        return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n    }\n    function pushTryEntry(locs) {\n        var entry = {\n            tryLoc: locs[0]\n        };\n        1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n    }\n    function resetTryEntry(entry) {\n        var record = entry.completion || {};\n        record.type = \"normal\", delete record.arg, entry.completion = record;\n    }\n    function Context(tryLocsList) {\n        this.tryEntries = [\n            {\n                tryLoc: \"root\"\n            }\n        ], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n    }\n    function values(iterable) {\n        if (iterable) {\n            var iteratorMethod = iterable[iteratorSymbol];\n            if (iteratorMethod) return iteratorMethod.call(iterable);\n            if (\"function\" == typeof iterable.next) return iterable;\n            if (!isNaN(iterable.length)) {\n                var i = -1, next = function next() {\n                    for(; ++i < iterable.length;)if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n                    return next.value = undefined, next.done = !0, next;\n                };\n                return next.next = next;\n            }\n        }\n        return {\n            next: doneResult\n        };\n    }\n    function doneResult() {\n        return {\n            value: undefined,\n            done: !0\n        };\n    }\n    return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n        value: GeneratorFunctionPrototype,\n        configurable: !0\n    }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n        value: GeneratorFunction,\n        configurable: !0\n    }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports1.isGeneratorFunction = function(genFun) {\n        var ctor = \"function\" == typeof genFun && genFun.constructor;\n        return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n    }, exports1.mark = function(genFun) {\n        return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n    }, exports1.awrap = function(arg) {\n        return {\n            __await: arg\n        };\n    }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function() {\n        return this;\n    }), exports1.AsyncIterator = AsyncIterator, exports1.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n        void 0 === PromiseImpl && (PromiseImpl = Promise);\n        var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n        return exports1.isGeneratorFunction(outerFn) ? iter : iter.next().then(function(result) {\n            return result.done ? result.value : iter.next();\n        });\n    }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function() {\n        return this;\n    }), define(Gp, \"toString\", function() {\n        return \"[object Generator]\";\n    }), exports1.keys = function(val) {\n        var object = Object(val), keys = [];\n        for(var key in object)keys.push(key);\n        return keys.reverse(), function next() {\n            for(; keys.length;){\n                var key = keys.pop();\n                if (key in object) return next.value = key, next.done = !1, next;\n            }\n            return next.done = !0, next;\n        };\n    }, exports1.values = values, Context.prototype = {\n        constructor: Context,\n        reset: function(skipTempReset) {\n            if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for(var name in this)\"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n        },\n        stop: function() {\n            this.done = !0;\n            var rootRecord = this.tryEntries[0].completion;\n            if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n            return this.rval;\n        },\n        dispatchException: function(exception) {\n            if (this.done) throw exception;\n            var context = this;\n            function handle(loc, caught) {\n                return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n            }\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i], record = entry.completion;\n                if (\"root\" === entry.tryLoc) return handle(\"end\");\n                if (entry.tryLoc <= this.prev) {\n                    var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\");\n                    if (hasCatch && hasFinally) {\n                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n                        if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n                    } else if (hasCatch) {\n                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n                    } else {\n                        if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n                        if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n                    }\n                }\n            }\n        },\n        abrupt: function(type, arg) {\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i];\n                if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n                    var finallyEntry = entry;\n                    break;\n                }\n            }\n            finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n            var record = finallyEntry ? finallyEntry.completion : {};\n            return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n        },\n        complete: function(record, afterLoc) {\n            if (\"throw\" === record.type) throw record.arg;\n            return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n        },\n        finish: function(finallyLoc) {\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i];\n                if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n            }\n        },\n        catch: function(tryLoc) {\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i];\n                if (entry.tryLoc === tryLoc) {\n                    var record = entry.completion;\n                    if (\"throw\" === record.type) {\n                        var thrown = record.arg;\n                        resetTryEntry(entry);\n                    }\n                    return thrown;\n                }\n            }\n            throw new Error(\"illegal catch attempt\");\n        },\n        delegateYield: function(iterable, resultName, nextLoc) {\n            return this.delegate = {\n                iterator: values(iterable),\n                resultName: resultName,\n                nextLoc: nextLoc\n            }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n        }\n    }, exports1;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nexports.asyncToGenerator = _asyncToGenerator;\nexports[\"extends\"] = _extends;\nexports.objectWithoutPropertiesLoose = _objectWithoutPropertiesLoose;\nexports.regeneratorRuntime = _regeneratorRuntime; //# sourceMappingURL=_rollupPluginBabelHelpers.cjs.development.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next-intl/dist/_virtual/_rollupPluginBabelHelpers.cjs.development.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next-intl/dist/middleware.cjs.development.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next-intl/dist/middleware.cjs.development.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar middleware = __webpack_require__(/*! ./middleware/middleware.cjs.development.js */ \"(middleware)/./node_modules/next-intl/dist/middleware/middleware.cjs.development.js\");\nexports[\"default\"] = middleware[\"default\"]; //# sourceMappingURL=middleware.cjs.development.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQtaW50bC9kaXN0L21pZGRsZXdhcmUuY2pzLmRldmVsb3BtZW50LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBRTdELElBQUlDLGFBQWFDLG1CQUFPQSxDQUFDO0FBSXpCSCxrQkFBa0IsR0FBR0UsVUFBVSxDQUFDLFVBQVUsRUFDMUMsc0RBQXNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0LWludGwvZGlzdC9taWRkbGV3YXJlLmNqcy5kZXZlbG9wbWVudC5qcz8yZGUzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxudmFyIG1pZGRsZXdhcmUgPSByZXF1aXJlKCcuL21pZGRsZXdhcmUvbWlkZGxld2FyZS5janMuZGV2ZWxvcG1lbnQuanMnKTtcblxuXG5cbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbWlkZGxld2FyZVtcImRlZmF1bHRcIl07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1taWRkbGV3YXJlLmNqcy5kZXZlbG9wbWVudC5qcy5tYXBcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm1pZGRsZXdhcmUiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next-intl/dist/middleware.cjs.development.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next-intl/dist/middleware/getAlternateLinksHeaderValue.cjs.development.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/next-intl/dist/middleware/getAlternateLinksHeaderValue.cjs.development.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar utils = __webpack_require__(/*! ./utils.cjs.development.js */ \"(middleware)/./node_modules/next-intl/dist/middleware/utils.cjs.development.js\");\nfunction getUnprefixedUrl(config, request) {\n    var url = new URL(request.url);\n    if (!url.pathname.endsWith(\"/\")) {\n        url.pathname += \"/\";\n    }\n    url.pathname = url.pathname.replace(new RegExp(\"^/(\" + config.locales.join(\"|\") + \")/\"), \"/\");\n    // Remove trailing slash\n    if (url.pathname !== \"/\") {\n        url.pathname = url.pathname.slice(0, -1);\n    }\n    return url.toString();\n}\nfunction getAlternateEntry(url, locale) {\n    return \"<\" + url + '>; rel=\"alternate\"; hreflang=\"' + locale + '\"';\n}\n/**\r\n * See https://developers.google.com/search/docs/specialty/international/localized-versions\r\n */ function getAlternateLinksHeaderValue(config, request) {\n    var unprefixedUrl = getUnprefixedUrl(config, request);\n    var links = config.locales.flatMap(function(locale) {\n        function localizePathname(url) {\n            if (url.pathname === \"/\") {\n                url.pathname = \"/\" + locale;\n            } else {\n                url.pathname = \"/\" + locale + url.pathname;\n            }\n            return url;\n        }\n        var url;\n        if (config.domains) {\n            var domainConfigs = config.domains.filter(function(cur) {\n                return utils.isLocaleSupportedOnDomain(locale, cur);\n            }) || [];\n            return domainConfigs.map(function(domainConfig) {\n                url = new URL(unprefixedUrl);\n                url.port = \"\";\n                url.host = domainConfig.domain;\n                if (locale !== domainConfig.defaultLocale || config.localePrefix === \"always\") {\n                    localizePathname(url);\n                }\n                return getAlternateEntry(url.toString(), locale);\n            });\n        } else {\n            url = new URL(unprefixedUrl);\n            if (locale !== config.defaultLocale || config.localePrefix === \"always\") {\n                localizePathname(url);\n            }\n        }\n        return getAlternateEntry(url.toString(), locale);\n    });\n    // Add x-default entry\n    if (!config.domains) {\n        var url = new URL(unprefixedUrl);\n        links.push(getAlternateEntry(url.toString(), \"x-default\"));\n    }\n    return links.join(\", \");\n}\nexports[\"default\"] = getAlternateLinksHeaderValue; //# sourceMappingURL=getAlternateLinksHeaderValue.cjs.development.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQtaW50bC9kaXN0L21pZGRsZXdhcmUvZ2V0QWx0ZXJuYXRlTGlua3NIZWFkZXJWYWx1ZS5janMuZGV2ZWxvcG1lbnQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFFN0QsSUFBSUMsUUFBUUMsbUJBQU9BLENBQUM7QUFFcEIsU0FBU0MsaUJBQWlCQyxNQUFNLEVBQUVDLE9BQU87SUFDdkMsSUFBSUMsTUFBTSxJQUFJQyxJQUFJRixRQUFRQyxHQUFHO0lBQzdCLElBQUksQ0FBQ0EsSUFBSUUsUUFBUSxDQUFDQyxRQUFRLENBQUMsTUFBTTtRQUMvQkgsSUFBSUUsUUFBUSxJQUFJO0lBQ2xCO0lBQ0FGLElBQUlFLFFBQVEsR0FBR0YsSUFBSUUsUUFBUSxDQUFDRSxPQUFPLENBQUMsSUFBSUMsT0FBTyxRQUFRUCxPQUFPUSxPQUFPLENBQUNDLElBQUksQ0FBQyxPQUFPLE9BQU87SUFDekYsd0JBQXdCO0lBQ3hCLElBQUlQLElBQUlFLFFBQVEsS0FBSyxLQUFLO1FBQ3hCRixJQUFJRSxRQUFRLEdBQUdGLElBQUlFLFFBQVEsQ0FBQ00sS0FBSyxDQUFDLEdBQUcsQ0FBQztJQUN4QztJQUNBLE9BQU9SLElBQUlTLFFBQVE7QUFDckI7QUFDQSxTQUFTQyxrQkFBa0JWLEdBQUcsRUFBRVcsTUFBTTtJQUNwQyxPQUFPLE1BQU1YLE1BQU0sbUNBQXNDVyxTQUFTO0FBQ3BFO0FBQ0E7O0NBRUMsR0FDRCxTQUFTQyw2QkFBNkJkLE1BQU0sRUFBRUMsT0FBTztJQUNuRCxJQUFJYyxnQkFBZ0JoQixpQkFBaUJDLFFBQVFDO0lBQzdDLElBQUllLFFBQVFoQixPQUFPUSxPQUFPLENBQUNTLE9BQU8sQ0FBQyxTQUFVSixNQUFNO1FBQ2pELFNBQVNLLGlCQUFpQmhCLEdBQUc7WUFDM0IsSUFBSUEsSUFBSUUsUUFBUSxLQUFLLEtBQUs7Z0JBQ3hCRixJQUFJRSxRQUFRLEdBQUcsTUFBTVM7WUFDdkIsT0FBTztnQkFDTFgsSUFBSUUsUUFBUSxHQUFHLE1BQU1TLFNBQVNYLElBQUlFLFFBQVE7WUFDNUM7WUFDQSxPQUFPRjtRQUNUO1FBQ0EsSUFBSUE7UUFDSixJQUFJRixPQUFPbUIsT0FBTyxFQUFFO1lBQ2xCLElBQUlDLGdCQUFnQnBCLE9BQU9tQixPQUFPLENBQUNFLE1BQU0sQ0FBQyxTQUFVQyxHQUFHO2dCQUNyRCxPQUFPekIsTUFBTTBCLHlCQUF5QixDQUFDVixRQUFRUztZQUNqRCxNQUFNLEVBQUU7WUFDUixPQUFPRixjQUFjSSxHQUFHLENBQUMsU0FBVUMsWUFBWTtnQkFDN0N2QixNQUFNLElBQUlDLElBQUlZO2dCQUNkYixJQUFJd0IsSUFBSSxHQUFHO2dCQUNYeEIsSUFBSXlCLElBQUksR0FBR0YsYUFBYUcsTUFBTTtnQkFDOUIsSUFBSWYsV0FBV1ksYUFBYUksYUFBYSxJQUFJN0IsT0FBTzhCLFlBQVksS0FBSyxVQUFVO29CQUM3RVosaUJBQWlCaEI7Z0JBQ25CO2dCQUNBLE9BQU9VLGtCQUFrQlYsSUFBSVMsUUFBUSxJQUFJRTtZQUMzQztRQUNGLE9BQU87WUFDTFgsTUFBTSxJQUFJQyxJQUFJWTtZQUNkLElBQUlGLFdBQVdiLE9BQU82QixhQUFhLElBQUk3QixPQUFPOEIsWUFBWSxLQUFLLFVBQVU7Z0JBQ3ZFWixpQkFBaUJoQjtZQUNuQjtRQUNGO1FBQ0EsT0FBT1Usa0JBQWtCVixJQUFJUyxRQUFRLElBQUlFO0lBQzNDO0lBQ0Esc0JBQXNCO0lBQ3RCLElBQUksQ0FBQ2IsT0FBT21CLE9BQU8sRUFBRTtRQUNuQixJQUFJakIsTUFBTSxJQUFJQyxJQUFJWTtRQUNsQkMsTUFBTWUsSUFBSSxDQUFDbkIsa0JBQWtCVixJQUFJUyxRQUFRLElBQUk7SUFDL0M7SUFDQSxPQUFPSyxNQUFNUCxJQUFJLENBQUM7QUFDcEI7QUFFQWQsa0JBQWtCLEdBQUdtQiw4QkFDckIsd0VBQXdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0LWludGwvZGlzdC9taWRkbGV3YXJlL2dldEFsdGVybmF0ZUxpbmtzSGVhZGVyVmFsdWUuY2pzLmRldmVsb3BtZW50LmpzP2U0NWUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzLmNqcy5kZXZlbG9wbWVudC5qcycpO1xuXG5mdW5jdGlvbiBnZXRVbnByZWZpeGVkVXJsKGNvbmZpZywgcmVxdWVzdCkge1xuICB2YXIgdXJsID0gbmV3IFVSTChyZXF1ZXN0LnVybCk7XG4gIGlmICghdXJsLnBhdGhuYW1lLmVuZHNXaXRoKCcvJykpIHtcbiAgICB1cmwucGF0aG5hbWUgKz0gJy8nO1xuICB9XG4gIHVybC5wYXRobmFtZSA9IHVybC5wYXRobmFtZS5yZXBsYWNlKG5ldyBSZWdFeHAoXCJeLyhcIiArIGNvbmZpZy5sb2NhbGVzLmpvaW4oJ3wnKSArIFwiKS9cIiksICcvJyk7XG4gIC8vIFJlbW92ZSB0cmFpbGluZyBzbGFzaFxuICBpZiAodXJsLnBhdGhuYW1lICE9PSAnLycpIHtcbiAgICB1cmwucGF0aG5hbWUgPSB1cmwucGF0aG5hbWUuc2xpY2UoMCwgLTEpO1xuICB9XG4gIHJldHVybiB1cmwudG9TdHJpbmcoKTtcbn1cbmZ1bmN0aW9uIGdldEFsdGVybmF0ZUVudHJ5KHVybCwgbG9jYWxlKSB7XG4gIHJldHVybiBcIjxcIiArIHVybCArIFwiPjsgcmVsPVxcXCJhbHRlcm5hdGVcXFwiOyBocmVmbGFuZz1cXFwiXCIgKyBsb2NhbGUgKyBcIlxcXCJcIjtcbn1cbi8qKlxyXG4gKiBTZWUgaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vc2VhcmNoL2RvY3Mvc3BlY2lhbHR5L2ludGVybmF0aW9uYWwvbG9jYWxpemVkLXZlcnNpb25zXHJcbiAqL1xuZnVuY3Rpb24gZ2V0QWx0ZXJuYXRlTGlua3NIZWFkZXJWYWx1ZShjb25maWcsIHJlcXVlc3QpIHtcbiAgdmFyIHVucHJlZml4ZWRVcmwgPSBnZXRVbnByZWZpeGVkVXJsKGNvbmZpZywgcmVxdWVzdCk7XG4gIHZhciBsaW5rcyA9IGNvbmZpZy5sb2NhbGVzLmZsYXRNYXAoZnVuY3Rpb24gKGxvY2FsZSkge1xuICAgIGZ1bmN0aW9uIGxvY2FsaXplUGF0aG5hbWUodXJsKSB7XG4gICAgICBpZiAodXJsLnBhdGhuYW1lID09PSAnLycpIHtcbiAgICAgICAgdXJsLnBhdGhuYW1lID0gXCIvXCIgKyBsb2NhbGU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB1cmwucGF0aG5hbWUgPSBcIi9cIiArIGxvY2FsZSArIHVybC5wYXRobmFtZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB1cmw7XG4gICAgfVxuICAgIHZhciB1cmw7XG4gICAgaWYgKGNvbmZpZy5kb21haW5zKSB7XG4gICAgICB2YXIgZG9tYWluQ29uZmlncyA9IGNvbmZpZy5kb21haW5zLmZpbHRlcihmdW5jdGlvbiAoY3VyKSB7XG4gICAgICAgIHJldHVybiB1dGlscy5pc0xvY2FsZVN1cHBvcnRlZE9uRG9tYWluKGxvY2FsZSwgY3VyKTtcbiAgICAgIH0pIHx8IFtdO1xuICAgICAgcmV0dXJuIGRvbWFpbkNvbmZpZ3MubWFwKGZ1bmN0aW9uIChkb21haW5Db25maWcpIHtcbiAgICAgICAgdXJsID0gbmV3IFVSTCh1bnByZWZpeGVkVXJsKTtcbiAgICAgICAgdXJsLnBvcnQgPSAnJztcbiAgICAgICAgdXJsLmhvc3QgPSBkb21haW5Db25maWcuZG9tYWluO1xuICAgICAgICBpZiAobG9jYWxlICE9PSBkb21haW5Db25maWcuZGVmYXVsdExvY2FsZSB8fCBjb25maWcubG9jYWxlUHJlZml4ID09PSAnYWx3YXlzJykge1xuICAgICAgICAgIGxvY2FsaXplUGF0aG5hbWUodXJsKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZ2V0QWx0ZXJuYXRlRW50cnkodXJsLnRvU3RyaW5nKCksIGxvY2FsZSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdXJsID0gbmV3IFVSTCh1bnByZWZpeGVkVXJsKTtcbiAgICAgIGlmIChsb2NhbGUgIT09IGNvbmZpZy5kZWZhdWx0TG9jYWxlIHx8IGNvbmZpZy5sb2NhbGVQcmVmaXggPT09ICdhbHdheXMnKSB7XG4gICAgICAgIGxvY2FsaXplUGF0aG5hbWUodXJsKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGdldEFsdGVybmF0ZUVudHJ5KHVybC50b1N0cmluZygpLCBsb2NhbGUpO1xuICB9KTtcbiAgLy8gQWRkIHgtZGVmYXVsdCBlbnRyeVxuICBpZiAoIWNvbmZpZy5kb21haW5zKSB7XG4gICAgdmFyIHVybCA9IG5ldyBVUkwodW5wcmVmaXhlZFVybCk7XG4gICAgbGlua3MucHVzaChnZXRBbHRlcm5hdGVFbnRyeSh1cmwudG9TdHJpbmcoKSwgJ3gtZGVmYXVsdCcpKTtcbiAgfVxuICByZXR1cm4gbGlua3Muam9pbignLCAnKTtcbn1cblxuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBnZXRBbHRlcm5hdGVMaW5rc0hlYWRlclZhbHVlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0QWx0ZXJuYXRlTGlua3NIZWFkZXJWYWx1ZS5janMuZGV2ZWxvcG1lbnQuanMubWFwXG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ1dGlscyIsInJlcXVpcmUiLCJnZXRVbnByZWZpeGVkVXJsIiwiY29uZmlnIiwicmVxdWVzdCIsInVybCIsIlVSTCIsInBhdGhuYW1lIiwiZW5kc1dpdGgiLCJyZXBsYWNlIiwiUmVnRXhwIiwibG9jYWxlcyIsImpvaW4iLCJzbGljZSIsInRvU3RyaW5nIiwiZ2V0QWx0ZXJuYXRlRW50cnkiLCJsb2NhbGUiLCJnZXRBbHRlcm5hdGVMaW5rc0hlYWRlclZhbHVlIiwidW5wcmVmaXhlZFVybCIsImxpbmtzIiwiZmxhdE1hcCIsImxvY2FsaXplUGF0aG5hbWUiLCJkb21haW5zIiwiZG9tYWluQ29uZmlncyIsImZpbHRlciIsImN1ciIsImlzTG9jYWxlU3VwcG9ydGVkT25Eb21haW4iLCJtYXAiLCJkb21haW5Db25maWciLCJwb3J0IiwiaG9zdCIsImRvbWFpbiIsImRlZmF1bHRMb2NhbGUiLCJsb2NhbGVQcmVmaXgiLCJwdXNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next-intl/dist/middleware/getAlternateLinksHeaderValue.cjs.development.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next-intl/dist/middleware/middleware.cjs.development.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next-intl/dist/middleware/middleware.cjs.development.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nconst NextResponse = (__webpack_require__(/*! next/dist/server/web/spec-extension/response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\").NextResponse);\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar _rollupPluginBabelHelpers = __webpack_require__(/*! ../_virtual/_rollupPluginBabelHelpers.cjs.development.js */ \"(middleware)/./node_modules/next-intl/dist/_virtual/_rollupPluginBabelHelpers.cjs.development.js\");\n;\nvar constants = __webpack_require__(/*! ../shared/constants.cjs.development.js */ \"(middleware)/./node_modules/next-intl/dist/shared/constants.cjs.development.js\");\nvar getAlternateLinksHeaderValue = __webpack_require__(/*! ./getAlternateLinksHeaderValue.cjs.development.js */ \"(middleware)/./node_modules/next-intl/dist/middleware/getAlternateLinksHeaderValue.cjs.development.js\");\nvar resolveLocale = __webpack_require__(/*! ./resolveLocale.cjs.development.js */ \"(middleware)/./node_modules/next-intl/dist/middleware/resolveLocale.cjs.development.js\");\nvar utils = __webpack_require__(/*! ./utils.cjs.development.js */ \"(middleware)/./node_modules/next-intl/dist/middleware/utils.cjs.development.js\");\nvar ROOT_URL = \"/\";\nfunction handleConfigDeprecations(config) {\n    if (config.routing) {\n        var _config = config, routing = _config.routing;\n        config = _rollupPluginBabelHelpers[\"extends\"]({}, config);\n        delete config.routing;\n        if (routing.type === \"prefix\") {\n            config.localePrefix = routing.prefix;\n        } else if (routing.type === \"domain\") {\n            config.domains = routing.domains.map(function(cur) {\n                return {\n                    domain: cur.domain,\n                    defaultLocale: cur.locale,\n                    locales: [\n                        cur.locale\n                    ]\n                };\n            });\n        }\n        console.error(\"\\n\\nThe `routing` option is deprecated, please use `localePrefix` and `domains` instead. Here's your updated configuration:\\n\\n\" + JSON.stringify(config, null, 2) + \"\\n\\nThank you so much for following along with the Server Components beta and sorry for the inconvenience!\\n\\n\");\n    }\n    if (config.domains) {\n        var _config2 = config, domains = _config2.domains;\n        config = _rollupPluginBabelHelpers[\"extends\"]({}, config);\n        config.domains = domains.map(function(cur) {\n            if (cur.locale) {\n                console.error(\"\\n\\nThe `domain.locale` option is deprecated, please use `domain.defaultLocale` instead.\");\n            }\n            return _rollupPluginBabelHelpers[\"extends\"]({}, cur, {\n                defaultLocale: cur.locale || cur.defaultLocale\n            }, cur.locale && {\n                locales: [\n                    cur.locale\n                ]\n            });\n        });\n    }\n    return config;\n}\nfunction receiveConfig(config) {\n    var _config$alternateLink, _config$localePrefix, _config$localeDetecti;\n    // TODO: Remove before stable release\n    config = handleConfigDeprecations(config);\n    var result = _rollupPluginBabelHelpers[\"extends\"]({}, config, {\n        alternateLinks: (_config$alternateLink = config.alternateLinks) != null ? _config$alternateLink : true,\n        localePrefix: (_config$localePrefix = config.localePrefix) != null ? _config$localePrefix : \"as-needed\",\n        localeDetection: (_config$localeDetecti = config.localeDetection) != null ? _config$localeDetecti : true\n    });\n    return result;\n}\nfunction createMiddleware(config) {\n    var configWithDefaults = receiveConfig(config);\n    // Currently only in use to enable a seamless upgrade path from the\n    // `{createIntlMiddleware} from 'next-intl/server'` API.\n    var matcher = config._matcher;\n    return function middleware(request) {\n        var _request$cookies$get, _configWithDefaults$d;\n        var matches = !matcher || matcher.some(function(pattern) {\n            return request.nextUrl.pathname.match(pattern);\n        });\n        if (!matches) return NextResponse.next();\n        var _resolveLocale = resolveLocale[\"default\"](configWithDefaults, request.headers, request.cookies, request.nextUrl.pathname), domain = _resolveLocale.domain, locale = _resolveLocale.locale;\n        var isRoot = request.nextUrl.pathname === ROOT_URL;\n        var hasOutdatedCookie = ((_request$cookies$get = request.cookies.get(constants.COOKIE_LOCALE_NAME)) == null ? void 0 : _request$cookies$get.value) !== locale;\n        var hasMatchedDefaultLocale = domain ? domain.defaultLocale === locale : locale === configWithDefaults.defaultLocale;\n        var domainConfigs = ((_configWithDefaults$d = configWithDefaults.domains) == null ? void 0 : _configWithDefaults$d.filter(function(curDomain) {\n            return utils.isLocaleSupportedOnDomain(locale, curDomain);\n        })) || [];\n        var hasUnknownHost = configWithDefaults.domains != null && !domain;\n        function getResponseInit() {\n            var responseInit = {\n                request: {\n                    headers: request.headers\n                }\n            };\n            if (hasOutdatedCookie) {\n                responseInit.request.headers = new Headers(responseInit.request.headers);\n                responseInit.request.headers.set(constants.HEADER_LOCALE_NAME, locale);\n            }\n            return responseInit;\n        }\n        function rewrite(url) {\n            return NextResponse.rewrite(new URL(url, request.url), getResponseInit());\n        }\n        function next() {\n            return NextResponse.next(getResponseInit());\n        }\n        function redirect(url, host) {\n            var urlObj = new URL(url, request.url);\n            if (domainConfigs.length > 0) {\n                if (!host) {\n                    var bestMatchingDomain = utils.getBestMatchingDomain(domain, locale, domainConfigs);\n                    if (bestMatchingDomain) {\n                        host = bestMatchingDomain.domain;\n                        if (bestMatchingDomain.defaultLocale === locale && configWithDefaults.localePrefix === \"as-needed\") {\n                            urlObj.pathname = urlObj.pathname.replace(\"/\" + locale, \"\");\n                        }\n                    }\n                }\n            }\n            if (host) {\n                urlObj.host = host;\n            }\n            return NextResponse.redirect(urlObj.toString());\n        }\n        var response;\n        if (isRoot) {\n            var pathWithSearch = \"/\" + locale;\n            if (request.nextUrl.search) {\n                pathWithSearch += request.nextUrl.search;\n            }\n            if (configWithDefaults.localePrefix === \"never\" || hasMatchedDefaultLocale && configWithDefaults.localePrefix === \"as-needed\") {\n                response = rewrite(pathWithSearch);\n            } else {\n                response = redirect(pathWithSearch);\n            }\n        } else {\n            var pathLocaleCandidate = utils.getLocaleFromPathname(request.nextUrl.pathname);\n            var pathLocale = configWithDefaults.locales.includes(pathLocaleCandidate) ? pathLocaleCandidate : undefined;\n            var hasLocalePrefix = pathLocale != null;\n            var _pathWithSearch = request.nextUrl.pathname;\n            if (request.nextUrl.search) {\n                _pathWithSearch += request.nextUrl.search;\n            }\n            if (hasLocalePrefix) {\n                var basePath = _pathWithSearch.replace(\"/\" + pathLocale, \"\") || \"/\";\n                if (configWithDefaults.localePrefix === \"never\") {\n                    response = redirect(basePath);\n                } else if (pathLocale === locale) {\n                    if (hasMatchedDefaultLocale && configWithDefaults.localePrefix === \"as-needed\") {\n                        response = redirect(basePath);\n                    } else {\n                        if (configWithDefaults.domains) {\n                            var pathDomain = utils.getBestMatchingDomain(domain, pathLocale, domainConfigs);\n                            if ((domain == null ? void 0 : domain.domain) !== (pathDomain == null ? void 0 : pathDomain.domain) && !hasUnknownHost) {\n                                response = redirect(basePath, pathDomain == null ? void 0 : pathDomain.domain);\n                            } else {\n                                response = next();\n                            }\n                        } else {\n                            response = next();\n                        }\n                    }\n                } else {\n                    response = redirect(\"/\" + locale + basePath);\n                }\n            } else {\n                if (configWithDefaults.localePrefix === \"never\" || hasMatchedDefaultLocale && (configWithDefaults.localePrefix === \"as-needed\" || configWithDefaults.domains)) {\n                    response = rewrite(\"/\" + locale + _pathWithSearch);\n                } else {\n                    response = redirect(\"/\" + locale + _pathWithSearch);\n                }\n            }\n        }\n        if (hasOutdatedCookie) {\n            response.cookies.set(constants.COOKIE_LOCALE_NAME, locale, {\n                sameSite: \"strict\"\n            });\n        }\n        if (configWithDefaults.localePrefix !== \"never\" && configWithDefaults.alternateLinks && configWithDefaults.locales.length > 1) {\n            response.headers.set(\"Link\", getAlternateLinksHeaderValue[\"default\"](configWithDefaults, request));\n        }\n        return response;\n    };\n}\nexports[\"default\"] = createMiddleware; //# sourceMappingURL=middleware.cjs.development.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next-intl/dist/middleware/middleware.cjs.development.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next-intl/dist/middleware/resolveLocale.cjs.development.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next-intl/dist/middleware/resolveLocale.cjs.development.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar intlLocalematcher = __webpack_require__(/*! @formatjs/intl-localematcher */ \"(middleware)/./node_modules/@formatjs/intl-localematcher/lib/index.js\");\nvar Negotiator = __webpack_require__(/*! negotiator */ \"(middleware)/./node_modules/negotiator/index.js\");\nvar constants = __webpack_require__(/*! ../shared/constants.cjs.development.js */ \"(middleware)/./node_modules/next-intl/dist/shared/constants.cjs.development.js\");\nvar utils = __webpack_require__(/*! ./utils.cjs.development.js */ \"(middleware)/./node_modules/next-intl/dist/middleware/utils.cjs.development.js\");\nfunction _interopDefaultLegacy(e) {\n    return e && typeof e === \"object\" && \"default\" in e ? e : {\n        \"default\": e\n    };\n}\nvar Negotiator__default = /*#__PURE__*/ _interopDefaultLegacy(Negotiator);\nfunction findDomainFromHost(requestHeaders, domains) {\n    var _host;\n    var host = utils.getHost(requestHeaders);\n    // Remove port (easier for local development)\n    host = (_host = host) == null ? void 0 : _host.replace(/:\\d+$/, \"\");\n    if (host && domains) {\n        return domains.find(function(cur) {\n            return cur.domain === host;\n        });\n    }\n    return undefined;\n}\nfunction getAcceptLanguageLocale(requestHeaders, locales, defaultLocale) {\n    var locale;\n    var languages = new Negotiator__default[\"default\"]({\n        headers: {\n            \"accept-language\": requestHeaders.get(\"accept-language\") || undefined\n        }\n    }).languages();\n    try {\n        locale = intlLocalematcher.match(languages, locales, defaultLocale);\n    } catch (e) {\n    // Invalid language\n    }\n    return locale;\n}\nfunction resolveLocaleFromPrefix(_ref, requestHeaders, requestCookies, pathname) {\n    var defaultLocale = _ref.defaultLocale, localeDetection = _ref.localeDetection, locales = _ref.locales;\n    var locale;\n    // Prio 1: Use route prefix\n    if (pathname) {\n        var pathLocale = utils.getLocaleFromPathname(pathname);\n        if (locales.includes(pathLocale)) {\n            locale = pathLocale;\n        }\n    }\n    // Prio 2: Use existing cookie\n    if (!locale && localeDetection && requestCookies) {\n        if (requestCookies.has(constants.COOKIE_LOCALE_NAME)) {\n            var _requestCookies$get;\n            var value = (_requestCookies$get = requestCookies.get(constants.COOKIE_LOCALE_NAME)) == null ? void 0 : _requestCookies$get.value;\n            if (value && locales.includes(value)) {\n                locale = value;\n            }\n        }\n    }\n    // Prio 3: Use the `accept-language` header\n    if (!locale && localeDetection && requestHeaders) {\n        locale = getAcceptLanguageLocale(requestHeaders, locales, defaultLocale);\n    }\n    // Prio 4: Use default locale\n    if (!locale) {\n        locale = defaultLocale;\n    }\n    return locale;\n}\nfunction resolveLocaleFromDomain(config, requestHeaders, requestCookies, pathname) {\n    var domains = config.domains;\n    var localeFromPrefixStrategy = resolveLocaleFromPrefix(config, requestHeaders, requestCookies, pathname);\n    // Prio 1: Use a domain\n    if (domains) {\n        var domain = findDomainFromHost(requestHeaders, domains);\n        var hasLocalePrefix = pathname && pathname.startsWith(\"/\" + localeFromPrefixStrategy);\n        if (domain) {\n            return {\n                locale: utils.isLocaleSupportedOnDomain(localeFromPrefixStrategy, domain) || hasLocalePrefix ? localeFromPrefixStrategy : domain.defaultLocale,\n                domain: domain\n            };\n        }\n    }\n    // Prio 2: Use prefix strategy\n    return {\n        locale: localeFromPrefixStrategy\n    };\n}\nfunction resolveLocale(config, requestHeaders, requestCookies, pathname) {\n    if (config.domains) {\n        return resolveLocaleFromDomain(config, requestHeaders, requestCookies, pathname);\n    } else {\n        return {\n            locale: resolveLocaleFromPrefix(config, requestHeaders, requestCookies, pathname)\n        };\n    }\n}\nexports[\"default\"] = resolveLocale; //# sourceMappingURL=resolveLocale.cjs.development.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next-intl/dist/middleware/resolveLocale.cjs.development.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next-intl/dist/middleware/utils.cjs.development.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next-intl/dist/middleware/utils.cjs.development.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nfunction getLocaleFromPathname(pathname) {\n    return pathname.split(\"/\")[1];\n}\nfunction getHost(requestHeaders) {\n    var _ref, _requestHeaders$get;\n    return (_ref = (_requestHeaders$get = requestHeaders.get(\"x-forwarded-host\")) != null ? _requestHeaders$get : requestHeaders.get(\"host\")) != null ? _ref : undefined;\n}\nfunction isLocaleSupportedOnDomain(locale, domain) {\n    return domain.defaultLocale === locale || !domain.locales || domain.locales.includes(locale);\n}\nfunction getBestMatchingDomain(curHostDomain, locale, domainConfigs) {\n    var domainConfig;\n    // Prio 1: Stay on current domain\n    if (curHostDomain && isLocaleSupportedOnDomain(locale, curHostDomain)) {\n        domainConfig = curHostDomain;\n    }\n    // Prio 2: Use alternative domain with matching default locale\n    if (!domainConfig) {\n        domainConfig = domainConfigs.find(function(cur) {\n            return cur.defaultLocale === locale;\n        });\n    }\n    // Prio 3: Use alternative domain with restricted matching locale\n    if (!domainConfig) {\n        domainConfig = domainConfigs.find(function(cur) {\n            return cur.locales != null && cur.locales.includes(locale);\n        });\n    }\n    // Prio 4: Stay on the current domain if it supports all locales\n    if (!domainConfig && (curHostDomain == null ? void 0 : curHostDomain.locales) == null) {\n        domainConfig = curHostDomain;\n    }\n    // Prio 5: Use alternative domain that supports all locales\n    if (!domainConfig) {\n        domainConfig = domainConfigs.find(function(cur) {\n            return !cur.locales;\n        });\n    }\n    return domainConfig;\n}\nexports.getBestMatchingDomain = getBestMatchingDomain;\nexports.getHost = getHost;\nexports.getLocaleFromPathname = getLocaleFromPathname;\nexports.isLocaleSupportedOnDomain = isLocaleSupportedOnDomain; //# sourceMappingURL=utils.cjs.development.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQtaW50bC9kaXN0L21pZGRsZXdhcmUvdXRpbHMuY2pzLmRldmVsb3BtZW50LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBRTdELFNBQVNDLHNCQUFzQkMsUUFBUTtJQUNyQyxPQUFPQSxTQUFTQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUU7QUFDL0I7QUFDQSxTQUFTQyxRQUFRQyxjQUFjO0lBQzdCLElBQUlDLE1BQU1DO0lBQ1YsT0FBTyxDQUFDRCxPQUFPLENBQUNDLHNCQUFzQkYsZUFBZUcsR0FBRyxDQUFDLG1CQUFrQixLQUFNLE9BQU9ELHNCQUFzQkYsZUFBZUcsR0FBRyxDQUFDLE9BQU0sS0FBTSxPQUFPRixPQUFPRztBQUM3SjtBQUNBLFNBQVNDLDBCQUEwQkMsTUFBTSxFQUFFQyxNQUFNO0lBQy9DLE9BQU9BLE9BQU9DLGFBQWEsS0FBS0YsVUFBVSxDQUFDQyxPQUFPRSxPQUFPLElBQUlGLE9BQU9FLE9BQU8sQ0FBQ0MsUUFBUSxDQUFDSjtBQUN2RjtBQUNBLFNBQVNLLHNCQUFzQkMsYUFBYSxFQUFFTixNQUFNLEVBQUVPLGFBQWE7SUFDakUsSUFBSUM7SUFDSixpQ0FBaUM7SUFDakMsSUFBSUYsaUJBQWlCUCwwQkFBMEJDLFFBQVFNLGdCQUFnQjtRQUNyRUUsZUFBZUY7SUFDakI7SUFDQSw4REFBOEQ7SUFDOUQsSUFBSSxDQUFDRSxjQUFjO1FBQ2pCQSxlQUFlRCxjQUFjRSxJQUFJLENBQUMsU0FBVUMsR0FBRztZQUM3QyxPQUFPQSxJQUFJUixhQUFhLEtBQUtGO1FBQy9CO0lBQ0Y7SUFDQSxpRUFBaUU7SUFDakUsSUFBSSxDQUFDUSxjQUFjO1FBQ2pCQSxlQUFlRCxjQUFjRSxJQUFJLENBQUMsU0FBVUMsR0FBRztZQUM3QyxPQUFPQSxJQUFJUCxPQUFPLElBQUksUUFBUU8sSUFBSVAsT0FBTyxDQUFDQyxRQUFRLENBQUNKO1FBQ3JEO0lBQ0Y7SUFDQSxnRUFBZ0U7SUFDaEUsSUFBSSxDQUFDUSxnQkFBZ0IsQ0FBQ0YsaUJBQWlCLE9BQU8sS0FBSyxJQUFJQSxjQUFjSCxPQUFPLEtBQUssTUFBTTtRQUNyRkssZUFBZUY7SUFDakI7SUFDQSwyREFBMkQ7SUFDM0QsSUFBSSxDQUFDRSxjQUFjO1FBQ2pCQSxlQUFlRCxjQUFjRSxJQUFJLENBQUMsU0FBVUMsR0FBRztZQUM3QyxPQUFPLENBQUNBLElBQUlQLE9BQU87UUFDckI7SUFDRjtJQUNBLE9BQU9LO0FBQ1Q7QUFFQXBCLDZCQUE2QixHQUFHaUI7QUFDaENqQixlQUFlLEdBQUdLO0FBQ2xCTCw2QkFBNkIsR0FBR0U7QUFDaENGLGlDQUFpQyxHQUFHVywyQkFDcEMsaURBQWlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0LWludGwvZGlzdC9taWRkbGV3YXJlL3V0aWxzLmNqcy5kZXZlbG9wbWVudC5qcz81NTAwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuZnVuY3Rpb24gZ2V0TG9jYWxlRnJvbVBhdGhuYW1lKHBhdGhuYW1lKSB7XG4gIHJldHVybiBwYXRobmFtZS5zcGxpdCgnLycpWzFdO1xufVxuZnVuY3Rpb24gZ2V0SG9zdChyZXF1ZXN0SGVhZGVycykge1xuICB2YXIgX3JlZiwgX3JlcXVlc3RIZWFkZXJzJGdldDtcbiAgcmV0dXJuIChfcmVmID0gKF9yZXF1ZXN0SGVhZGVycyRnZXQgPSByZXF1ZXN0SGVhZGVycy5nZXQoJ3gtZm9yd2FyZGVkLWhvc3QnKSkgIT0gbnVsbCA/IF9yZXF1ZXN0SGVhZGVycyRnZXQgOiByZXF1ZXN0SGVhZGVycy5nZXQoJ2hvc3QnKSkgIT0gbnVsbCA/IF9yZWYgOiB1bmRlZmluZWQ7XG59XG5mdW5jdGlvbiBpc0xvY2FsZVN1cHBvcnRlZE9uRG9tYWluKGxvY2FsZSwgZG9tYWluKSB7XG4gIHJldHVybiBkb21haW4uZGVmYXVsdExvY2FsZSA9PT0gbG9jYWxlIHx8ICFkb21haW4ubG9jYWxlcyB8fCBkb21haW4ubG9jYWxlcy5pbmNsdWRlcyhsb2NhbGUpO1xufVxuZnVuY3Rpb24gZ2V0QmVzdE1hdGNoaW5nRG9tYWluKGN1ckhvc3REb21haW4sIGxvY2FsZSwgZG9tYWluQ29uZmlncykge1xuICB2YXIgZG9tYWluQ29uZmlnO1xuICAvLyBQcmlvIDE6IFN0YXkgb24gY3VycmVudCBkb21haW5cbiAgaWYgKGN1ckhvc3REb21haW4gJiYgaXNMb2NhbGVTdXBwb3J0ZWRPbkRvbWFpbihsb2NhbGUsIGN1ckhvc3REb21haW4pKSB7XG4gICAgZG9tYWluQ29uZmlnID0gY3VySG9zdERvbWFpbjtcbiAgfVxuICAvLyBQcmlvIDI6IFVzZSBhbHRlcm5hdGl2ZSBkb21haW4gd2l0aCBtYXRjaGluZyBkZWZhdWx0IGxvY2FsZVxuICBpZiAoIWRvbWFpbkNvbmZpZykge1xuICAgIGRvbWFpbkNvbmZpZyA9IGRvbWFpbkNvbmZpZ3MuZmluZChmdW5jdGlvbiAoY3VyKSB7XG4gICAgICByZXR1cm4gY3VyLmRlZmF1bHRMb2NhbGUgPT09IGxvY2FsZTtcbiAgICB9KTtcbiAgfVxuICAvLyBQcmlvIDM6IFVzZSBhbHRlcm5hdGl2ZSBkb21haW4gd2l0aCByZXN0cmljdGVkIG1hdGNoaW5nIGxvY2FsZVxuICBpZiAoIWRvbWFpbkNvbmZpZykge1xuICAgIGRvbWFpbkNvbmZpZyA9IGRvbWFpbkNvbmZpZ3MuZmluZChmdW5jdGlvbiAoY3VyKSB7XG4gICAgICByZXR1cm4gY3VyLmxvY2FsZXMgIT0gbnVsbCAmJiBjdXIubG9jYWxlcy5pbmNsdWRlcyhsb2NhbGUpO1xuICAgIH0pO1xuICB9XG4gIC8vIFByaW8gNDogU3RheSBvbiB0aGUgY3VycmVudCBkb21haW4gaWYgaXQgc3VwcG9ydHMgYWxsIGxvY2FsZXNcbiAgaWYgKCFkb21haW5Db25maWcgJiYgKGN1ckhvc3REb21haW4gPT0gbnVsbCA/IHZvaWQgMCA6IGN1ckhvc3REb21haW4ubG9jYWxlcykgPT0gbnVsbCkge1xuICAgIGRvbWFpbkNvbmZpZyA9IGN1ckhvc3REb21haW47XG4gIH1cbiAgLy8gUHJpbyA1OiBVc2UgYWx0ZXJuYXRpdmUgZG9tYWluIHRoYXQgc3VwcG9ydHMgYWxsIGxvY2FsZXNcbiAgaWYgKCFkb21haW5Db25maWcpIHtcbiAgICBkb21haW5Db25maWcgPSBkb21haW5Db25maWdzLmZpbmQoZnVuY3Rpb24gKGN1cikge1xuICAgICAgcmV0dXJuICFjdXIubG9jYWxlcztcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gZG9tYWluQ29uZmlnO1xufVxuXG5leHBvcnRzLmdldEJlc3RNYXRjaGluZ0RvbWFpbiA9IGdldEJlc3RNYXRjaGluZ0RvbWFpbjtcbmV4cG9ydHMuZ2V0SG9zdCA9IGdldEhvc3Q7XG5leHBvcnRzLmdldExvY2FsZUZyb21QYXRobmFtZSA9IGdldExvY2FsZUZyb21QYXRobmFtZTtcbmV4cG9ydHMuaXNMb2NhbGVTdXBwb3J0ZWRPbkRvbWFpbiA9IGlzTG9jYWxlU3VwcG9ydGVkT25Eb21haW47XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5janMuZGV2ZWxvcG1lbnQuanMubWFwXG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZXRMb2NhbGVGcm9tUGF0aG5hbWUiLCJwYXRobmFtZSIsInNwbGl0IiwiZ2V0SG9zdCIsInJlcXVlc3RIZWFkZXJzIiwiX3JlZiIsIl9yZXF1ZXN0SGVhZGVycyRnZXQiLCJnZXQiLCJ1bmRlZmluZWQiLCJpc0xvY2FsZVN1cHBvcnRlZE9uRG9tYWluIiwibG9jYWxlIiwiZG9tYWluIiwiZGVmYXVsdExvY2FsZSIsImxvY2FsZXMiLCJpbmNsdWRlcyIsImdldEJlc3RNYXRjaGluZ0RvbWFpbiIsImN1ckhvc3REb21haW4iLCJkb21haW5Db25maWdzIiwiZG9tYWluQ29uZmlnIiwiZmluZCIsImN1ciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next-intl/dist/middleware/utils.cjs.development.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next-intl/dist/shared/constants.cjs.development.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next-intl/dist/shared/constants.cjs.development.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n// Reuse the legacy cookie name\n// https://nextjs.org/docs/advanced-features/i18n-routing#leveraging-the-next_locale-cookie\nvar COOKIE_LOCALE_NAME = \"NEXT_LOCALE\";\n// Should take precedence over the cookie\nvar HEADER_LOCALE_NAME = \"X-NEXT-INTL-LOCALE\";\n// In a URL like \"/en-US/about\", the locale segment is \"en-US\"\nvar LOCALE_SEGMENT_NAME = \"locale\";\nexports.COOKIE_LOCALE_NAME = COOKIE_LOCALE_NAME;\nexports.HEADER_LOCALE_NAME = HEADER_LOCALE_NAME;\nexports.LOCALE_SEGMENT_NAME = LOCALE_SEGMENT_NAME; //# sourceMappingURL=constants.cjs.development.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQtaW50bC9kaXN0L3NoYXJlZC9jb25zdGFudHMuY2pzLmRldmVsb3BtZW50LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBRTdELCtCQUErQjtBQUMvQiwyRkFBMkY7QUFDM0YsSUFBSUMscUJBQXFCO0FBQ3pCLHlDQUF5QztBQUN6QyxJQUFJQyxxQkFBcUI7QUFDekIsOERBQThEO0FBQzlELElBQUlDLHNCQUFzQjtBQUUxQkosMEJBQTBCLEdBQUdFO0FBQzdCRiwwQkFBMEIsR0FBR0c7QUFDN0JILDJCQUEyQixHQUFHSSxxQkFDOUIscURBQXFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0LWludGwvZGlzdC9zaGFyZWQvY29uc3RhbnRzLmNqcy5kZXZlbG9wbWVudC5qcz9lMDdlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuLy8gUmV1c2UgdGhlIGxlZ2FjeSBjb29raWUgbmFtZVxuLy8gaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvYWR2YW5jZWQtZmVhdHVyZXMvaTE4bi1yb3V0aW5nI2xldmVyYWdpbmctdGhlLW5leHRfbG9jYWxlLWNvb2tpZVxudmFyIENPT0tJRV9MT0NBTEVfTkFNRSA9ICdORVhUX0xPQ0FMRSc7XG4vLyBTaG91bGQgdGFrZSBwcmVjZWRlbmNlIG92ZXIgdGhlIGNvb2tpZVxudmFyIEhFQURFUl9MT0NBTEVfTkFNRSA9ICdYLU5FWFQtSU5UTC1MT0NBTEUnO1xuLy8gSW4gYSBVUkwgbGlrZSBcIi9lbi1VUy9hYm91dFwiLCB0aGUgbG9jYWxlIHNlZ21lbnQgaXMgXCJlbi1VU1wiXG52YXIgTE9DQUxFX1NFR01FTlRfTkFNRSA9ICdsb2NhbGUnO1xuXG5leHBvcnRzLkNPT0tJRV9MT0NBTEVfTkFNRSA9IENPT0tJRV9MT0NBTEVfTkFNRTtcbmV4cG9ydHMuSEVBREVSX0xPQ0FMRV9OQU1FID0gSEVBREVSX0xPQ0FMRV9OQU1FO1xuZXhwb3J0cy5MT0NBTEVfU0VHTUVOVF9OQU1FID0gTE9DQUxFX1NFR01FTlRfTkFNRTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5janMuZGV2ZWxvcG1lbnQuanMubWFwXG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJDT09LSUVfTE9DQUxFX05BTUUiLCJIRUFERVJfTE9DQUxFX05BTUUiLCJMT0NBTEVfU0VHTUVOVF9OQU1FIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next-intl/dist/shared/constants.cjs.development.js\n");

/***/ })

});